(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    282941,       5847]
NotebookOptionsPosition[    277867,       5670]
NotebookOutlinePosition[    278209,       5685]
CellTagsIndexPosition[    278166,       5682]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"inner2D", " ", "=", " ", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", ">", "0"}], ",", 
      RowBox[{"r", ">", "0"}]}], "}"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "Pi", " ", "I", " ", "k", " ", "r", " ", 
        RowBox[{"Cos", " ", "[", "t", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7207116069519997`*^9, 3.720711631847*^9}, {
  3.7207120611400003`*^9, 3.720712096799*^9}, {3.720712872352*^9, 
  3.720712913092*^9}, {3.721149030576*^9, 3.721149033969*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{"0", ",", 
    RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.720712097781*^9, {3.720712878966*^9, 3.720712915117*^9}, 
   3.721149035834*^9, 3.721589856625*^9, 3.721590077041*^9, 
   3.721716000382331*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", " ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", ">", "0"}], ",", 
     RowBox[{"k", ">", "0"}]}], "}"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"r", "^", "2"}], "+", 
         RowBox[{"a", "^", "2"}]}], "]"}], "]"}], " ", "inner2D", " ", "r"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.720712954492*^9, 3.7207130366549997`*^9}, {
   3.720713819593*^9, 3.720713851908*^9}, {3.72071402702*^9, 
   3.7207140272460003`*^9}, {3.721149042459*^9, 3.721149117809*^9}, 
   3.721149263359*^9, {3.72114934034*^9, 3.721149351491*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(r\\\\ \\(\\(BesselJ[\\(\\(0, \
\\(\\(2\\\\ k\\\\ \[Pi]\\\\ r\\)\\)\\)\\)]\\)\\)\\\\ \\(\\(Log[\\(\\(a\\^2 + \
r\\^2\\)\\)]\\)\\)\\)\[NoBreak] does not converge on \[NoBreak]\\!\\({0, \
\[Infinity]}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7217160060846567`*^9}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   RowBox[{"2", " ", "\[Pi]", " ", "r", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]}], "]"}], " ", 
    RowBox[{"Log", "[", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["r", "2"]}]], "]"}]}], 
   RowBox[{"\[DifferentialD]", "r"}]}]}]], "Output",
 CellChangeTimes->{
  3.720713042959*^9, {3.720713827217*^9, 3.7207138434449997`*^9}, {
   3.720714007734*^9, 3.7207140291070004`*^9}, 3.721149064149*^9, {
   3.721149106151*^9, 3.721149121624*^9}, 3.7211493538310003`*^9, 
   3.721589860657*^9, 3.721590083347*^9, 3.7217160060956573`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", "r", "]"}], " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "Pi", " ", "r"}]}], "]"}], " ", "r"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.720713101991*^9, 3.720713207455*^9}, {3.720713245396*^9,
   3.720713263301*^9}, {3.720713750868*^9, 3.720713813584*^9}, {
  3.7207146689049997`*^9, 3.720714681078*^9}, {3.7207147551540003`*^9, 
  3.720714766204*^9}, {3.721149149797*^9, 3.721149154021*^9}, {
  3.721149235381*^9, 3.72114923999*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
XPWXE19Iotoi7XXH/EnILJKUsH4liUUvGeZspMeATSHzeeOHjX58jaeOVvRA
5lK/U16+JDbrsp+d5PMjAXWsJ0SKJDGYgW/8G28mufhZZZtrqSSuD25dF7Yq
IexWd/4p/9mwJbt4x7zqycVyvlMfWiWxfXnGO6Shl+yLOaBI0ymJh2/aHes/
NkDYvSxZzLslkZbt14v19CGSqZRcIDi0ge/fJzutq+OE/ZXWrmdzkqjSYaEp
GjFDep3tOYYWJRFX4pIHYykk63jgiPaqJB4f3fKSP2aWWK+3xqzTSmFtvodq
zcN5sr+Z+p4poxQ6mAiWe19aIBzf5EyzWKRwyxu30YGDiyT78g3eG1xS6Bi6
Cmq/NvYhvp6s4pXC3zSMIs73l8klYVKpICiFlORxpVH5FbKf0pvwREQKDWZ3
BphUrBDOPyyP+sWlcPJa9aVbpqukL17JUlNaCnsDInbN/lsl2ffPHYraIoW3
3yu0hZ9fI4EmnkKrW6Uwy9StYmfJGrm0J3rWWEEKnZn3bfKSWSdPA/g4vHZK
IcPArO1Zp3XyecB3a5SKFKq9eRp17ss6+YsrGoV7pJD38UMl6951Mvf6mkn/
PilsHetm3cVAlS88032T+aAUXhDYfEuGlyofdM8FKIAUTvfS9qyJUOVbfyiP
P3lYCvMrd6rmilHl+64d/HldWwq3f/0RYypElf/J8EtL6H9SSK3F+LmNnSq/
+stmSuZxKbQ6f9v8zso6oTCHsbXpSaGMX1kyZ9U6EbrIIrduIIXtwobHvELX
iXqOF0qf3egn82xb/cl1YsU3ZaxtJIXBh3I/Kq2tER9H6xu2JlLI9s4+MCFq
jSSWNj7zM5PCkqMeq6aqa+SP5PG4z5ZSuKloqNu5YJVMu+WRGmspFP/kkMRx
eJXw1yo3U2ykcMw8RuFixgo5oPBhWuCKFL6pvxv2TmKFWDwSZD3gKIVHNvHb
ULyWiXeH3xYzZymkYkk78b5miVQGXjeKdZFC6/CU/AXjRTI51Odc6r4xn/qt
9PLPFwivprHfsJcUEuWZyILseXJhFvKUvKUwZpfvUZO5WTJuzCaTGyiFZZYe
w0829B33t3uHuoKl0GtXsNDmpUmyl5VyjjZMCuO2bC5qKp8gd/Nanhx9J4Uc
I5EKpidHCOfmhIn6j1L4Ob9m6U3rP6IyevjHeIEUCrCk0pb3foVz2hl1XCVS
KJ88MqQgV7ihL7aN7y6XQjvPKW9po99QqM8p5VElhUahWwWfVDXBmfR2H8Y2
KUwNrMrUOdsPruwGUds7pfBaMbNNKxmEdzZFWSe6pTBbXWSuSWoE+oWSRoMH
pfCHZH775bIJcLnjekpyVgoTPpZU39ekwNZRT9bHC1K4OdFivsB8FpqM75eM
LUuhhtF2687rc7Bvz9P9P2ikcbEnZEe6x8Z9PzqAIsUgjTxV1z7ccVqEV5zB
n32ZpbFIzIhJ6/wSLIyES5/jlEZLWt5Cvk0rkGAc1ZbDI40WY+knjGpWwKg0
9uVmAWk84zPlQ+u3cT7s+aj/VFgam9dvThLVNciKTmaZEpPGqWhIP9C4Bvac
qUWGUtL4xF2nervdOgjfybiTJyON7WbPlI6MrUPFSPa+LVul8e4WPYcEZSp0
NybTfvLS2MGYRPv4EhVuLy38NK0ojesG65FbgqiwZXfZZWMVaXyhVfjD4TsV
Po2ulMzfI41jC56cuvVUeICzpkVWTRq7qx6//zJChaNe9SH+B6XxgOHlooAl
Knw70qxHAWmksXsj105NjbrGHUwmmtLIOr7eGLphr5R0F/zUkcZCw3itjEUq
/LR7wHPrMWn0CtyhAcNUaBo9svf5CWn89fs5w55aKmTlnJyc1ZdGMHNXiUyj
wlwvSqLpGWm8rsZd7BtAhY4jC9aFhtJYUKYmRmVJheLGq+LbTaTxEOupGX4F
KvxTQt0caCaNuu0zsUWd63BnN0PwvKU0fgt8KzlrtA6K0SwnzC5Jo6KXic9c
4Rp0cHAwFttKo/onJkcGqTUI8OL5KX9VGjvddX7aOq0CjAh4BF2TRo3x05E2
qSswaSS6Z/G6NHpcY1M/PbAMUSWSE+a3N+b3d2vZ/f9RXN3xVH9v3B32TCWz
jDvc4br3miGfp77tZGSElCgSGak0yIgUlahUZKWhVJIko3wOQksDUVERorKz
5+/z+/O8zvl8nud5v9/nec5bfhoTyWbt0juuDWUnFxtqmE9i+fI8jUuRRP0q
Ct+3EH5w53Fh81S0Npgte/3AzXQcq3A23/QyXhuiNQY0i6VGsRPymw12XdUG
g+vPm5iWg5jwuF3fq2va8LnvwkRnbx/2849jDj9TGxQuBP1bbvMX+69mh9rc
LW2ID9/qX9nXhVGPB1FSHmtDovWx4E97PmEn/1xsePdOG/qjuw+UkL/gMc1d
r6c/asNR3flPT3d+x2NemFTqfiL4D1OQ2/y1HT+R0ZJ/okUbjuif3vhVtRsP
36KTYNyjDf5a9Y1zVwfx49ihk7v+asO2DBP3wbohPIxbG5bYrw0u8QPNjjPD
+DExP78/IwT/U2XPMv8bxUNKC9ZnkHSg97mdHQqcxA/lUOENVQca37tk1u+a
wg9ecjKZENeBA/ucrHo3T+PBAVP0LXI64NFr4YXIs/j+bVYaEQt0AFOLkX/9
dhYPWp+x6P4iHXhj0tN69MwcHqi9iiKmpgMPG3bNXu2axwPkL00Jl+pA0LYd
sitABAXMdA25a+nAdNbspeBTIsj/t8nvszQdmKrgeNu8FEH7muLaSpg6sHaz
/8piMgn5VbU0/2LrQPpIkuclYxLyzdd7v5CnA+frtM/U7SKhvekRNSDQgY7P
zdK28STkE//xub+hDmjUK9RJ5ZLQnsM6T1JNdOBR7mangUoS8t596H6tmQ68
C7nRONRIQl52tTdGVuhA3BhbU7KNhHZbqlzTWqkD8Zu8Ea+ThHZx/C5Yr9YB
3/prAzvaSchT+Xlc6DodYIXT0q82E2tR+ag7G3XgU9j9gG81JOQxvPPIp806
4O7ohQQPSWjnj4JAsh2B9xLWzbREYv2WukffQQc+3Ej4wfQjIfcSpx1uW4n4
QQM9PyxJaMftO45xrjrg9dC9o0GahLZfnLIq2q4Dt8VTUxbXiyC3SKvVHTt1
ICa57XBJkgja5p9hrrBbB/5afopp2iiCXF0HhSv26AAv/0qBzPQ87rJuFdvX
Vwfk/gl4r+3ncWfDS1pX/HVAkF7xXJuYd05ypgpDB3Tgus7fuIJFs7jjdJz4
0sMEXmn2vmErZnCHnpa5jccIvCYkg8S2TeP2lRF9NyN14AZ6tKbg0CS+5eHH
zo/ROvDa0vBk/IEJfEuaTutcrA6sl82OOb9nHLcNqX3tfE4HzFLWU0oMRnEr
tvwdmVQdeNWR7B3rM4i7vAy8w0rXgRPPRS6wHfpxb+8Pd9Zm6cDQ7UgT4Zu/
eGR20t3I2zowGDHWiK7+wgtVF90bKdCBCBffYyqpzbi6tEpe6xsdQN65suPU
Txjr7tG8yXc6cPWmj9XnC18x43Vf85TqdWDnkeZnRjJtmG30tYe2n3Vg0XJb
X15UFxYzrfHoRSeRX5Z3mYLYIJaUEv6ovVsHXOpPPcrcOIRlmPx4NPdHB7Sa
jtYvjhvGig9kFZgO6YDTw18iTUMjWO9f7cL7szrg5uTSLOY9iU3GRRe+EqFB
/uI8cW3/KUxMt7PwF4UGBpeNzXJ8pzHN3beeaErRoCbhbvK+dbOYHlmsaIUs
DdLvV/uM0OcwIo8iVwUaBHs++HJocg5zaGU+vaREg+zqUl0FTAQ8jp1++kiF
BrQLR9OcrxD9V/n303fqNPjkEfzt5G8RCC3aUPx3GQ3cI/d5HzYiwWmH3GIJ
HRoUd7jOyYWSIHlYqoTOoMHtrc4v+KUkyE70K1nFosEp9RqzqmESPOS9LXHn
0mDq3Gm7hzQyPHvLLQ3Tp4Fx6fbANhsyvPI9V5oipMFJ5sZjqw+SoUmiv7TI
iAbb3JR/vEkiQ8dt67IGUxrsVOq5svcOGQZXPywbNKeBbchrwcJiMsz+lH8m
i9HgCvL5iBAZpKKCnrFXEfHzHhv7V5JhybKPz9atocHnnBR88XMy0J4Lnu9e
T4NDKZV7S/PJINh24XnUJhr8DbVt2J5OBsvJ4ecZ1jTQnbphJhpNhk1X7MvL
7GiwQ5x+vNiDDM5GheWfHWjgnSS/+MRyMng1LMJHt9IAtaxWCpQiQ/D+Q7ji
Nhok+GuzzzeSIFK+CdffQYOVLe7xI1dIcO6BMbLyoMGY4ujUYwcSMHbqejzY
TdS3T4TsSCVBuaIqWc6HBi4y9cfc74vA1mrpGwF+NLi1mlI3biUCg4dn/3sf
QIOgmUbvM2/nsTj2QKd+MA2Mjpls7Rmcw7S/tZ1MPESDc/e6az3FCb5Xvai1
CyP41jqZAjIzWN/IE5+CCBr48br5odNTWGxOjuTCaBrM6K12jfo+iRXLnNnU
GEeD5dtUGlujxjH1Zrv3Tldo0GnY0b/bahh7Evdf0NNUGjjLvDb06RnErC2M
Fihn0KA2hcJTm+zHIq8r23+5SYMAiTT5A8t+Y51+P5q2FdBAWf9ZfsS7L9h9
Ef/vO+tokBLBXXmg5TO+5vGOiIoPNBhVhI+76D/w7162mtqNNPChCcMqHv3E
Fd4YeHZ8JfR15cSx7M89+MHkqS6vHhpsfvFJstZuGJdd3xtb85cGN+yvtN4r
+YffnvrGZA7QIEpS9/BmlVH8s3vF3p5RGpTl5u52fD6Om7NP9/lS6KBcuzXI
4vQM3th6NOGNGB0WOd3a8CR9Ft933k+fK0WHtfpjvMO353DRVds/nJWlQ0j2
pXLJ7Hk8Y8R6f58CHe5NG2jNrhNBJjmgaL2IDjI81eG+p4SfcBE+zltCBzhw
d+CGJjFPZGgO8mp0qI3oau6PIiEyvng0cCkdhhq3ZV5vIaFr+8Uvf9CiQ9ey
4ZMX9MjIkDZpLKDTYfL5Wva1w2RU1/SnOUmXDg/8U69dLSEj77jWI8McOtCb
zXz9/pHRvPk7FXt9Opxb4V00TqOgq/146WMhHVwcrq+gW1OQ4PqjbYuM6aDd
ccT7RwAFvba/MXNwOR3UEu9uXHyKggpO/vx6zYIO+o8efhhOpqDUp1ollRgd
FpiU7d6STkEnfu+88nsVnfCfR+n6xNpXLeuQwlo6nL23UPEUcX7L5h/2Jhvo
8HRFsfS2WAoyi1gq3GFFBxE9xaa8QArSfrRd4aQNHRoXZijF2VGQZEda/70t
dBje9mvLPw4FDS5qfVvvSAfeuxt9k3Nk9Hmt2r1JZzq4VlRp339NRuiIa5ym
Gx0kdBzJ6ufJ6E5uyp517nQwEdnhu8OKjBJbP68J8KSDxo1r8/FkMjoip0xL
9qJDW4U+/dkjEloffLntpx8dqPnHuDemRRD/5qdyyUCCv9InwmuXRZBy06J0
fjAdWr+4TKlxRFD38osu4UfosI+zxTH/BOHX/OpNboXSwbjvw5OG2Fm8KH2B
0ttwOkxs+nTYI2IGjyUl1qucpIP1XCB9vc0UHmDwPh9O0+HKlg39+5mTuJOX
3Pk9Z+iQ8NPhZM7oOM54dXbTkyQ61MtIADVkFK9OjHthm0Hk+z1qfGDhIH6/
8mX24et0yDkwlJJg34dfGhGPyrhJB8NDGrorDvzBdzvHrujNpQNTzXTB9IVO
nKoZXXTqKR0WGpdoS3V/wFc9DLtT/oEOwsPctWqr2jB2e1lsVwMd7h5EYy1W
HZjiwundMs10WGJftFvU7hf2M+Solus3OrzcUXWvD3qxKMuQ1NHfdIgsNLPI
ev8P8wl6ckS9j074ydz4x+xRzDZ7xOm/QaKe9t7douFjmKbYgYVJY3T43pC3
ZKv0JIbqAs9yKQzY71cyKP54FjNcBNJXxBgQGFQocubzHHbHVSGeJMWArGED
8fDBeUz9epvEPlkGOJhnxeofF4Hz3fmnmhQYoJ7KYn4h/AeZFyW2chEDRG8P
m5L2kyDkoN3Je0sY4P9pkUfQDxL8KdWiKqkx4O+C3ofDa8iwgzR8InIpA1oq
j5RsvUmG+nWVpL9aRLy/wvvBU2RYm3Ah0pHOgMUZ/3mrrqdAaaPnPK7LAIMy
1TjWOQroqRmEs7kMWP1k65nwVxTI8qDMXtJnALV25uX0DAUW3WkInRcygNfY
mXSKSYXT/Tem9hozYPnwQWOZDVSYMTx4tHE5A9x2RCse8aBCUOjqCcsVDEgL
Cbj8PIgKnRWLDt8FBtiquFs3hFDBWaJrdOFqBkhnF3Q/PkC8na2fHAxfx4D4
hDjDHXuoYJl88l/PRgYw7h/R+2RHhYIWx2B7awZsOrltaJkBFRjajKHndgzw
ylhXtUGaCqk+Y4G6jsT+7ywxz68UkHtY03/BmQEWD22Xh2VR4MToZf/ZbQxo
kNDqfbidAmPme3r3uDNgth4rUVakgO8JE796TwbkdfWaNhHz8vtL8T8W3gzQ
ZDiPSBPzb4v8Z5+cvQyobyt0ap8mwfK0I95hQQx49cKiQk2FBPd/ru/6dYAB
QWJTvj+viYAmS2W33WEG6GQ2N0ovEQGJohIPRjgDagZXu//sn8XCZuLaEqMY
8Gnzg/WOpYT/WuXqPh1D8J09YR99ZBr7/H7K7cMZBgjahps2vZ/ArJTetJid
Z8Dn5rK1invHMeR2zfXWBQYYOZ9b/Xd8FMv5be58LIUBESrmtd7jw1gI5bg9
LYcBD633/53W/I392bC5PiGXAXfd+O9c3nRhOxI17CYfMGCKv+nrjO9PbI1G
ufW7QgYcfwP0lZrN2CKT+Q1HKhmwK3F1p+6Sx3iBbxS8/caAqxbX17d878MN
PXe+ZLQzwOaXRbP3mUG8yAWzjepkwNZCfeUszWG8ZP2su/FfBsxMbxiQMxzF
zaC1O7GfqGd7SOyf/DH8mUlZ4N8hBnzrLa3eQpvAEeNoRNYEA9b2tAVZ9k7h
q5Y6i09PM6B60mTNKWwGr1psct5xngG63ESNHqIf1VBHM6TEmLBvLXnu0cA8
vn6mgeElyYTYudNAPS2CXv8ryMNlmMBrUrJgLSChup9B5QcXMkE5idLhL0tG
1l9t1r5XYsJE7oSOeiQZffjIe8dSZUL1Mvnj7X/IaMsrWacYDSa0uI0eP7eZ
ghpR77fvmkxIEBfn/cuhIKfiN17LaUwg70GavycpqPlhbt9FJhPyD9w/veE/
KnLOiTvUz2bC0MCL9cPRVPQ1w2d2PY8JLxMsqNVlVOR2ed3JGwImNHTe4+b8
oaLv5xiyc4ZM2Hw2Ve6EgijaeVI02dmUCampO1pX6Ymi9rBO9cfmTGi03Pz0
K4giz4NVN2UxJtBUTZ9abhJFnX7ZXJ9VTNiYYTC4x0oUee+KKqxcw4QPx2+E
2K8WRT2uOy00NjDhz3i8B9lAFPluwV4ctmJCyJllb44qi6LeDUut6m3+X2/6
+8oRKgpYOdvAtWeCcMf2+D+1VDRg2rrtlBMTxiV4C8gXqCiIX9bR7sIEpRWD
/kvtqWiYmepnsZ0JD64cu+wsTUUHlx39d3knE+4413jWlVLQmJJz6NAuJgTm
7I1K96AQ88qEYrWHCZZ1u3z75sloUlTpzG1fYv0QbLuSyejY7IgiKYAJ9pdS
5B/pkNHMSEPqtv1MSBmZVI+8S0LhvQXaRQeZoP1Sf/9JJgmJdCblKhxhAuu4
/MHxdBFEabAprQ5nAmVnwtklf+bwmNe8VZonmHCj4s4Rp/uzuFil7OtjJ5lw
73XoP0+PGVzq0Zsv+meZ0LPDwFLt9iSucH7dZEoKE5h9vyOe5P7DL8QyokbS
mKDjc572c+EwvihcVNImiwlhf65P1R0cxJf4VylTc5ggM8b6uX3lH3zpJsw0
oJDAu8DQ0bPhM95f4Teb8JQJGouGRZ6Z1eO46dXKh6VMeG3mObXSoBbfyRiy
GkLE/3YLajdFXMOySTc8DtYx4UgaRQG2tGLBR94zkj8Q+SmlKjMPtmP/DUz/
fdLAhFXWBQ/dSzqxzlaHkPEvTPjeb31jv95fjFksdubYLyakr3zgJFb3D5vg
Gdhe+80ELnVZ7+qNo9jLW+6Ln/US+syz5TfiY5jvxeLM2WEmvNJ6bXI/aRIz
k+ravXSMCUaiFTvaeqcw6agFbGyS4FurwcvCcga7H+BbGDnPhPtuT0T2Vsxh
YV2Xj14n68J2i/AnK4fnsc1uVZaVorrwtPT3obtnRKB/g/oriowudHpYvudl
EO99tD6BJq8L90WWjCMNMpw3OWS/RlEXquwD3FIvk4FPf/ctVlkXFvUJr/gc
oIBI2lR2jpouaLuPVYk1U+CjItPn5VLi+4ctc5bEPMiOs9f7raUL/lrVJb2n
qBAsEjksSdcFPbqdSX8jFf47fP8pW1cXDp5ddZWmKgqL+j+HbeLogoFtU/eB
raLQuVt01T6eLhwVJTOrzorCkxaB+DmBLghCLzvNlIhC7JYdbx8Y6sJav1WR
Mj9EwelVfNI7E12IvLS/vGNaFJjw1GnATBei56n/HVIQg4miDjUFS12oz2h3
e6ouBi/1FNr5K3XhZe+WsBuaYpBy0+K23WpdCLyKGRsT+75qe/2C1+lCQjVv
baC8GJhdSOZf3KgLRk3q5+2mREFKsnL08WZdoDKXqXW0ikJLRH9poy0RL7VJ
Re+pKNwfU40ctSfwWv3om3mcKIT5r1ujtFUXLo9ONy+1FwWrzgNSJq66wOx6
cbFnkShobMt6v3U7wY9S0sO8d1To//j20pGdumB+89enuEgqlK+fdEnZpQtr
gvIKk9lUSMDpy0q9dSHmv6B/g28p4G68pfPrXl2Qq9qn+3wPwQ/tXoB6EIHn
9UjeilNk+JjabLDigC7MmS/YvUqGDNkLqJPbQ3RhJHar+bZ4Evw37xadGaYL
6sWjFqeDRSArXvU3JVIX9p6+mW+QNY/NLP5s7ROtC2klIy+nreawIq69qiBe
F9Ynp3Lqjk9juq4bHlVe0YWzS59cFLMexWK6xJYwr+kCyUGnpyDnH9Ye9CLs
TIYurD4S2mgxMYSlnsLWO9zShev3zkVWk/owmSdGP7oKdOHQv1X0lcrfMB/4
t3pjkS78zTIyi8//hFW/yc/NK9GFUzZ1Dc+PvcXCf3JCDiNdOLY8eniu6hQ+
KK8tK/lOF0LFPLHb97/jVtd+BPt/1IX9x4ZfnZPswO8y0j9/bNSF5+qNW1c8
+YV7rlC+mdqiC43PHhsFD/Thjb5y5tzfuiA10RFi1D6K88feZCX2EvnVSO4z
ix3Hz0XFiY0OEPj83fHMUGsSX3uVWv98TBfG7dVN2MYzeLZOpYn2FHHfjB+k
VuTN4vN5EemxswR+Qax9p1Tn8eLqKR8bKgtmU2WrTneKoEV2xe8ei7NAnSpc
anOShPa3HjJUlmZBy9ib3YeWktG7PQapYXIs0BZNLH3ykIzY/wbn2xawYM2N
g4V1phQUG57ntWYxCzbpSh8OL6GgDsl9b+4qs6C5e2PDWQEVQTJLIKfOAtys
wqMii4rSNLsvBy9jwd0JlbQeMVE0ce/mTJM2C5xvj4zU7xJFjiaenuYMFry0
m+5zeCqKCiqXvcxksWBtB5+7jiSG5Ky/6VH1WLDPzz8+dqUY8v2SetGHz4I3
NfOskcNiqHa38+RbAxasQ/uiDt0UQ7TBxe4CExbcy1u9d6RGDEWGNrxINmOB
HfEocP8hhlrFkthTK1hwnLEs5E6fGFp+wTpxx0oWXGK8SKgdEkOXNWTGKlez
IExOmlP8VwwN33m1jbmeBXvffoo71iKGrA1PVZzZxAK/rneBCyvE0D18NXPQ
mgV/duxknE0TQxKbyOcctrDgitmdI8P+Ymh3Ez5c7MgCkpdfnrORGFJof53c
4cyClLBm28RxUVT295OpnBuRz4+zjWaPiHk91tZi6s6Cyf/ET+/3FEWKpN7w
XZ4E/i/GqHbSoui59LhWghcL4m/00CfvUZGPErm62IfAh3dv6uxqKsI5ytJy
gSyo+/O0dOEOwq8a6+SZBrPAdsmUo9sPMlJaybPbdYgFrgXcLnMXMtrntPpK
cSgLzruEFJ8xISFlDxuzjnAi32TdXp80EVTl5/pN9gQLfNu0LvmPzuOqUUE6
u06z4OzjgQHjDcT760xozbkzLBCcKK3f0z6N778cu7c4gQVFVY56kQFT+Mt7
aQ9lk1lgTlmIMveO4yFNL82Lr7OgLNP+MXVkEP/I0XKQLSP472ZjfWa1eJgx
d9yknAXPLKT7d4Q+wnVXmqR6VrDgeWNCYohyDhbutLntaS0L8oyG9x31+ohx
o47u82xkQbo6TaAl3Y19PhMjf66ZBaZhCeecE/9g0ZfPFzz9ygKpR8z1cjL9
2Nd7tyZk2llASf+sWxM0jJ1u+hjztI8F3+vVI8cHJjDD9lbmz0Hif5cuPFA4
NoX9+Nv9WmaEBQ4uDUUrp6YxY9KcgucUC5i/VBQufZ3D2qUlC8/OsgD5N3e+
UheBs0qLtj4VYcP9Y2JbDGtEoIPDTpcRZ8PVNy21uCgZEoyNwESKDSu23t7h
eY0MZiuhw0OWDYUlWo3DLAp0bdoUe1aBDZV2xodNH1Eg0cmJ9XQhG/Awle2z
fCpYeHi8bVdig97nmhC5u1To9tsXKKPKhi0lnrfMVUThQshhRRMNNpiWH6/b
GiUKllEnnnhoskGtXPDbtF0Uxi3SPMJ02BBQ+f7PQhMxyJ94InuFwQajlaVy
eAwxfwrflzxisaHEzqxE7bUY6AT99nrLJeKpLHaXExeHVg5FsVufDcHhQYnh
5uJwuVu9nGTAhoPaF8hb94iDzQ1jX3VjNqSXH7x6Ml4cJNxtlUyWs6H9GN93
+qY4VKr6VtpZsKHHxODN/SJxCG2KDtiHsUHGcq1NEi4OhhfSVU+tYkOa0P3d
DWLdv/lpzfU1bPC7bbbnJ3E+R/Jj8LP1bCCJ4pHWt8RhZ/Wfpc2b2CBcxnzd
S8RTjaK+GbJmw7f5f8uriXwaLJYeltlC4MG7Ld1B5Ht2wkSH6ciG8FHLZw5E
PWsL7d6vdGZD9fN4US5R73ygX6jbNjY4jBl9Pk7gUcw5yTy8gw3vY/IcPI3F
ILg7oyHJgw1VyxorR4j5z7lRHHF/NxsoAcdO2xN4Z6j2Nrf7ssF4BSY2f48K
W5tEY2b82fB4q0rpFSMqKFxYxl+ynw17b/66fukpBaIl7U9bHWbD/JuRvuBb
ZLCo3me45xgbiqsaBE8XkGEsMrYt6jgbWg9ga+iHSeAzUWL6NJoNzQdYSR48
EdAqbOj8GEvkc3Y6x5o0j30N7EvsjWOD+SpepnTqLLa5W/O3ViIbPO08i9m5
U5iw6VTK2TQ2fPceveHiMILNPnac8njChlFO8YF01y9YUWDg7bBigv9J3tQn
uXosiBO35UoZG9gFwcKHh6qxn9nPct9WsOGT1B1jrPkh/jJJZ5vJOzZc9Gk6
f+hOG34hcKhMppsNfW5rcuS3jOHNWJqE3x823FVRlBtcMoGrK6xzfNXHBs20
0KN3GybxnPy0/pMjbDgs5AynsGbx3sh15p3jbNiu5sNwqpzDhXbDp1ZNs2Hk
fSZ7miGCng2t05onceDPwjaFS+kkRKoc9t8uyoHAo1aVTzaT0doL6aVlEhwI
zi6PnB4lo7Oe68VVZTigcu5+l8plCvoo/Gd/RJ4DP3ZLyrzSoyIlSkZWkyIH
SNS4/BfPCD/WsL7PUIkDGdr2tm9XiaJfBzJih9Q5cHBfWJeCgRjirN7QYKPJ
AbXXtZfaiH4ftGhkWZ4OB7gBzZ3tM2KoqDNjnwyTA9sOr8jp2SKOpgs3lPiy
OTAuHk+uyxBHcHJE9JUeB25fLojxaxNHsY6ZW5gCDvRuOG9wa4kEekPfmHnS
kANKJd7X3FdLIIWxkb8dJhxYty6qJcZbAjnWZJquMucAxijPp4RLoNTLG09m
WXLAboAW/j5eArV5j36cW8mBDdcD7dvOSiC6SdbS7Ws4MPA4bkgYI4F8xTf5
la3nQEwzqe5lkATKbx59qmLFgfMt++TubJFAozlZ1CM2HEhfVpLYwpJAZkc2
2TVt4YBic/C34DFxFLF+LN3QiQMvbKcYJ4rF0Qvl638uuHAAueSBdpA4kvq9
yWTIjQO3imWTgzTEkU3JWLTNTg7I3mpQOY/E0KW46x8e7OKAxdzCVTddxNBX
FysNmT1EPX1u/V97RNHuqetFL/05kOjySjqA8MN3X1tRmPs5cONc4FOj7VTU
nzpuc/IgwZc9SX+0hoKOmm/+vTKUA6tUawt2EP69XHrCKCucAx6hJ6cufiAh
amv2ibkoDnx0G9zQrExCCWETamWnOcB6/Cv5LH0eb7C64aNylgPrJR9LG8TP
4soa1k8On+dA+FI9xkVint14fsPa8DIHbHyuKHj6TeDFc9ZRD25wwGx0e2mS
yBD+M/LWr8xyDuSpIn8b8wd4yIf0oBcVHBCs0dKhcfMxKc3LUz0vOPD122f1
0WO1mBCPlRO+4UDWfp5ehlILFj27x/hFMweaKxytFt7sxZQ370Q9XzmgTbvC
M2YPYvfTnDfKfif0EkXrvDIzhDWab9jh1MkBb9moHMG5UYx2jB3bM8iB1o+9
r99vnMGKX2kryI5wIKB83Di3fRazUlFLFYwTehYvKQ72n8cOFkvnHZvlgPHm
Hq2nfBJISFBNM0W44B7kZWnZSYK0rTMVVRQudAcverckiQzVY72fZKS4QFJ/
uqz4EwVc13a5C2S5cE1DsEvEn/ALyd9+OypwIfg5zzpjhgonuj4dOLaQC3KZ
+TdcYkRByejdbIYSF95YqGjMUsQgN6bmVJUKF7ZOLIhwChUDy8byBT3qXPCW
3/TA+I8Y1Os8vSajyQWDIrnn+23FwfvAQ7pAhwtLRbPEfjwQh6nKnIeODC6s
b9lh5EKWgATFrOXHWFzY5JDrVL5ZArQ9r1ZlcLmwrS20e+C8BBQ9Stxcpc+F
80lP2upfSsBGUlxzt5ALyrlLK20mJOC7bZSHjDEXaBOSaVuWSkJw1tG//OVc
6JHPXvLGTBLEB/cfcrTgQv9I8/H7myUhDfOdP4px4cSGoWd9TpLAP+8Zl7GK
CzLZj/fFEesX310XVq3hwrplnI/HrSTBmWef3r2eC+xpqda3ppLQe3wTU8aK
C48scrhhapIQWfffI74NF4atT8klj0jAIg0Lc8ctXOhDSSG0FxJwZ59h9VFH
LtTOfpwzi5cAi2dcmwxnLojYf2nrXSsBH6TpXyq3caGO8bzfbkocdm/T2NW9
gwttVYXxJ4l5O5m7uE/akwt37rqk314jDglTsof5Xlyoaj4X3/xNDLQ3ipEc
fbjwVkKGbukvBht/jy3KCODC6CHTaIdgUfhuOpBRuZ8L7wK2XNrZQ/jp0926
3QcJ/N9lv3F1okIq87MFP5QLoS81pUZVKcA7/KHGIZwLLR+GVkoFk6Gy5qXt
0SgubLAs/TReQYK/XiW7K09x4d+1t1e9NouAzOtV59lnuPB87re9x9AcxuW9
LbmQwIXH16/9rVo+i+0b+y63K5kL/I9Oa2ayJ7HeWGoJ5QYXeNqvbrb1DWG9
OTaya8qJ/aPUhOaMAkxG5ovJgwouGA5JOymlP8S5QZ6ei6u58HLFbmxe4xW+
z/TQ0643XODarHy3regb3vcy1SP2Cxfc3uTsYeQN4HJ6tLP9rVygmu96otUx
hPOSHhQ5tXGBKa3qlNr9Dw9wQdLMbkKfIfpsdtM43v+760ntCBe+iL65vFYw
j8tZB7bpT3DBYfy2k9RBEcQrmJC6Os2FFx5Rz2E9CQUck97pQ9YDtTK5jrQv
ZJTw/VL8B1E9iBreVyRNzKe8VUufmErqgUvwQs/WDUS/kxJISSrogajFMfEd
l0WRXGCp4f6FenAIW7EzhCeGeA3/uX9R0oORMftk/BnhT0zq4laq6kH068ne
cRBHAdecCu9q6EHnHmPtn6XiKGH+x/cFWnrwXMssag1bAuXt2it5jKYHR5mF
pP4ECfSudtjgJ1MPLLYpud/vkUADnLAdGzl6cDK0jOdkIokUEkXjCnh6oLiq
61/1MUnEH0l4rCrUgw+L4wQtBZLI1ln5+wkjPVj44+fRYz8kUdCz6xJ/TfVg
IKkm9JyIFErU5BjYW+iBQCRXlqIkhfJjCreXYXrgE+9h/H6ZFPrQs+K0zn96
sGfzGYO/GlJo0Kq24MxaPTA9eOu4o4IUUnhk++3fBj347l73asE4EX/xV3G3
zXrQvIshyaon4h/dJXxhS+D7s9vr7nUi/rdeN66DHhzIXGh520sSJa4MOXVp
qx4MGTapmS6VRPm35h/NuOrBfxcu3Qt7I4E+SMa17t6hB01nch9e9pdAg/6K
4nUeBH7Hfww9oEogd7vfAdO79WDM1dSl/6o4emeImlg+elANbKxTRxytUL5i
6eynB0V385PLbomh+9P+t2MD9KDUvv7XjaViSO3Harkn+/UgeP+zVR8SRFF8
pVpIx0E9QKRj3MNjhJ+Le7UGQvUgVOtZyLIHFNS8L+tBQLgeXP9ssS1jhnjf
2B5enB6lB5Lvi29dWE1GtCX0rslTehA5lKE0US6C2m5Gxjy+pAdLDLYKjd5O
4Tant/a2X9GDf/KLp+iUSbzcj+egcE0POqzbLs3qj+NpwlYd/+t6MGrvo24S
8A93RiZVjDw9SBhP6f6p3Y2/b+knpdbqgQn+5j2EN2CWePXel6/1IKJRband
8xbsfnbax7E6Pci7Nfc3frIdi9+78bp9ox5MaoYX/lP9g60dvwWy7XqQu0TM
kjI4gj35GnbHvJNYq/aGiDaPYbRyewXfbj3Q7xU5ePjJBEY+SWqr6dODK+mD
Oc8cZ7Byxe0RkVN6IHVvebjcaRLojRl0583qwR9FvZZ9NmRI+yJl802EBy1f
1lu8lqfAsazipWbiPBgQ8C3tj1Hhd/T5WB8pHji61F3s1xEF5z3e/ZdleaC1
MCvRp1oUjHmLyv8t5ME9q43nJvvF4NaCv3TtJTzYV/J6RUqIOCwarThnq8qD
NqvrDNaoOER/vjoarsGD/r27DEJ8JWC4LHD7A00euNxmd9o2SYBH5trqFh0e
nH3weuc5ot9/OKGhJ8XkQYdiejwlSRIw75FLpmweRHxukTn/QxLyNryZ8dbj
gYFojJ88TQo43/P9T/J5IHO51cdtuxTcCb78/YYBD8JN6h3en5UCuniYTaUx
D2prvdMcCqQg+5oHalvOA8Z5+q7WOilYxl8nmLfgQeVwRZzrDylIe8HN1gAe
rO2yeVzzSwqUXRQXWvzHg5U/Fm5Q75SC5L7xaNe1PDie3xPm2iwFiie+jRzZ
wIPFFLONMUgKEpSqvK5Y8WDF0IVDWZlSIH3vTtMTGx6IX0XxJQel4DSWsK5x
Cw9IKnFfvmFSINp4oHjYkQd6YhNBy0hScMLHhbXAhQedZStVLhVLwvyMZaq+
Gw/GHmNWjt6SEJZEk7Z258Hw7tPcSClJmKRLhe3z5MGxGnqo0S0JCCkd6I33
4gFXpf9MirEE/LP+tP2uDw9iFkWbNpaLQ1BH6btaPx7hx2Y+KliKQ9/hLOxX
AA8ul8GC8ELCz8rE5lODefCpQlnMWlsMdhnZXVh5hAd1ixIv9ndSoe2VMWVn
KA/8q7QdDMyo4LZD/WB4OA8+VD4aqDxFAadT3Y5lMTx46Rc4/EaGDBu/HFcx
SiL47qtJLT87i9X674q3v0Top2yZQ8SbaWw1ecP0/is8KHhT031ifhKz5Cz6
lpdO5He6woe0cQwTHM/N0s3lgRsb7nyfIN57Ws1M9SqCb28T4yAVhCc/eXbV
rIYHe8bU+2y8P+CKG7MlXV7xgNMR/tmk7DMuc8D/b/J7HjhVbSgwu9WJz7+g
PJRv5UFT25nF43uH8TCX38t4P3hAqV/judFjBJ/oe5do9ZMHQY3dK2ztxvBh
pdTguB6CjxTv5tPKU/gvH74xZZQHIWtHgieviKCBBTnrvCZ44OH2McoynIQm
SjVcaqd58FHR3HjMjYwkZaXDzpD1AfPqHhCQqUixKOpcn6g+fMQW/pqopSJV
94kMG0l9+Hf3YHFxjCjiPuqqWKigD0OPAr7Ut4shI1e3hkML9YF24ZP/+Shx
ZElp6GxW0gc9nw2PJAn/s+7+hrHlqvrwVePxk9nrEsjWEYmnaejD2D1ZBldb
ErnMGavMaerDoVqLXa5XJJFnzgP2Tpo+9Ok3ZmwhSSFfW5pFJVMfzu6p+tfh
LoUOTKZupnH0QSrua9jPAikUlr3APZanDz+/a+xlTkmhmE2ng3oE+mDS8l02
yUganRuZi9popA+ilAtjZC9pdDn90MX7pvow7+E67HVaGmWu7b0pZ6EPDktX
L7uTKY3uDHgWBWH6YFmj++9ZrjR6dPVLbf0qfXCZMl2Vflcala60/WK4Vh8y
NXX/W5cmjar+1Py5vEEf4prHE8tPSKO3F1fMTFjpQ2yvB1tmuzRqtCiU3War
D0o5bQGWHGn0rYu97Lm9PjDWOqns7ZNCvxKu85dt1Qf9NEfTWzekUL+J8qoo
V32oRXK0BdZSaLwtwb5juz6YtXbs/9AriUTiRb3WeOiDvOq9LulISSRpEBaS
s1sfxD/f2DkkLokUW4dPSfroA85hvHtM+EPVk3tT/Pz0oa51kdwZwu/p8Npy
6wL0YWuf6rfH28URt9npmX6wPix+W14aWCqGDCPr6pIO6QNzuVMdVVYMra0v
HXQM04dvqSJFvy9RkU2ogFwcQeCjlklqfU1BzrQ7C1Wj9aGnWYvZO05GviHJ
xt/j9MHrNPdlsykJnVMNCvO+og9Pt7m4n62Ywi9X/Tr3MlUfDu52vNddOIFn
7Nueyc7QB6MPjTJTaWN4fvnGyv6b+hCV4jA1bD2MN3rSJQ4X6ANVYe+a9rs/
cdV7Xy+eqiPwKT74OD3gJxbckPHz4Qd9CJbe5bay+Bf2atpT8LlBH6qLPjl1
Tv7Bjlj9faf7VR/sFZSmrR4OYc1905Kvf+lDBW/+qAeaxHhKyHn4tz6IcKsC
7uRNY7GWMTmqffqQ/ftaacaFWcz4vMwav3/EedQ27pQmAhuvyoGYCB9+3G54
0j9CgZD7QXtSSXzYO9i/RqyECtmoPoFH4UO1reLmdYdEYarn8jcnMT4k+Ozq
0fokBozZCepfcT5wbh/eLjgiDlsWbONGSPLBPeLSSidFCbi7fFlojgwfusWf
3h5kS0Lj5qhsczk+hF2QUB2/Iwkinh2v3svz4cDpLhkjDSnghqwZ2rWAD55q
oBN2Sgqc43OUJxT58NfJ9931bimIyZCEs4v4EC2uuiNihTTkF/jt0VTiw6Jd
w/LDp6WhtaYuoXAJH1aan9NoeSUNEi36RetV+PBQfu7lMhEZMBxI+taqygfX
/ld77nJkYCdlhLpfnQ9aOTb7vKxk4OwSJ67oUj5YB6X5r/GUgWJOsX3KMmJd
eFcP85eBTkw1VE+LD6Y7SBlWxFrBISy7QpsPZpdrfvoR5y18vr9ypPFhdbiW
Qybxvz1hMPSbzodnGrLhfUS8C4nZyuFMPlzdcGqpB5FP+U0qKLL48GVMW1vy
tTT8Kfbec5vNh5+UuYwJoh6lupcJZlw+sHXU360l6l3Vzi56p8cHJyGLIk/g
ETB69punPpFf563soFgpSJUcoI7z+bBj9Qml82pSUKNhxz0j5EOUPrsi6bYk
DAse2y8z5INVhMTADaYkLF27OPSxER+OmMTWjGRIwKGAL69aTPkQVxbXobVf
HLJOmA8FmvEhZdPChYFvxeDt5XRlqgUf5qqIF8BSMaDhHnu4GB9CrWdFtXKp
YNtQlYCADxcnBg7FdFAgrJte5LCKD53LHaW0FlOgUf4P9fgaPiwr3v8VPEkQ
vTM4u24Tke/b5vUPXKexkTn11OjNfPhel6v+zHQS806vTVpuw4cM7/eqotLj
2Mav6lG3tvDhlcbAXUHiMKboUOt+3IUPh9bZFDcF/8Sy1qlr6O0h9GgXdNh3
cSeu+KtmUYcPH9atG8zc9rkHj4nZL5Piy4f6tZyW/sQ+fE9FzTQ1gOCv5p3C
cv9/OM98/9fWg4SeKrtW/7dxBs/6olZ/IYQPXbH8i6Jec7jikZpX64/wYWu5
ygqT5SJorFCtpDCUwDOT3fKcT0Y+9jX5vsf5cO70mfm7mhT0dSjojmYEH4zr
5t5qSFDRc17NlbMn+DBtdFowUSaKeHVB51fF8GGJeefTy6fEUJaf2qmJk3yw
XPVQS2+DOFKUqgnPO8WHWxd/L/cUkUAxd4JCdsfxoUFLYV/7fQk0tlYtQPUM
8f0J2l9Xa0nk01Xt9eEsoe+hC03RnZLoa3TQ9tgEPqzY2uWmFCiFrLTVHC0S
+bDPyKD1I9Gvy1G11XASH3QPYiKhO6UR3z1o9Z2LfMgUM/7eUiONsmdVLXYk
8yEpeEb2haYMWphWbbDoCh/OuElWSATIoBizIM7rq3wo21rcFJMng8Y+q+pE
pvLhhaNCv/JPGeRzuFrVOI0PC1eMHLwnIYu+Lg5S7E3nQ699UaGutiyyKlSV
ys4k9l0lWk/wZFH5lmqS83U+oO3/iRXoySL+UOCk7A0+7I+jQOEyWXT9vOpQ
1U0+FGxfHHeOKosUedU9R2/z4d1cQcO6ViKft4S/vcOH8JAFpH+3iXx8VT93
3eVD4Lxly83dRD6S1e+v3eODeY6DzNHFMuhrTmCt3QM+JL6eU0wqkUZWa1Vx
8YfEfdDyMFxkJ43KO18UPc/ng/p6Nz/9VinEjw7MO1DAB9kWc8fF26RQtpbq
bVYhgU/QJ7W5Okm0CL1I//GEDxHftbYzjSTR+IzKuU0lRL/wu+9j1S6OBv9t
ipss5YPU3IScG1sc9fw5fjLnGR96xm9tMNkrhr5+bj9OQUS/NczUznhFReWF
dwPKaoj7eKH+kekyEnp6r8V370s+9GkknT+vKYLys2X3LHnNh1Pdz+T2Gc3h
1xP3ux+o48N/eU+TA8cm8Zh9y205jXy4e3bVFHdkED++y8/qyyc+3Kx/vMnH
vA8PcU1ff6qZqP+WzZ2hyB58z3rSyo6vfDCqi9/t2vwN30h7JbjWTuj9+hLK
L6VKTKHVeaH0AB9ubFczPek4ikk2xMuXDPJBxCcl8HLqOEZ+/Ux6zzAf5ouu
C158msT+PdWkVo0SeItZP0pkz2G9eVtE9o/zQVR981Galgh03oqZWTrJh+3d
KXW6DBI0XewZOTZD6NXLUPGnCgXex6sO6c7xoUbC+V+pOBVeRln1Nc3z4fqJ
wo3UPiqUBOZ3CSkCmNJWFW5NE4MC75/tbVQBqG2R6rvuJQ652xd9TxATwJmt
fi9/0CQgbdORpj+SAmh4r3u1K1oSklfl1l+VFgB5vdBogQ7hJ5a3vlsrKyDm
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
ZcyOairivzwvSgg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 20}, {-4.19695822608571, 4.107866379676592}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellFrame->{{0, 0}, {3, 0}},
 CellChangeTimes->{{3.7207147575480003`*^9, 3.7207147729040003`*^9}, {
   3.721149224057*^9, 3.72114924102*^9}, 3.721589860876*^9, 3.721590083443*^9,
    3.72171600630367*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"inner3D", " ", ":=", " ", 
  RowBox[{"2", " ", "Pi", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "Pi", " ", "I", " ", "k", " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "*", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.718088244149761*^9, 3.7180885039406204`*^9}, {
   3.718088609315647*^9, 3.718088659528519*^9}, {3.71963188646301*^9, 
   3.7196318932353973`*^9}, 3.719632102105344*^9, {3.7197194185755606`*^9, 
   3.719719474369752*^9}, {3.721148037795*^9, 3.721148086099*^9}, {
   3.7211484588050003`*^9, 3.7211485159440002`*^9}, {3.721148645424*^9, 
   3.7211486462980003`*^9}, {3.721149529876*^9, 3.721149531094*^9}, 
   3.7215817498456*^9}],

Cell[CellGroupData[{

Cell[BoxData["inner3D"], "Input",
 CellChangeTimes->{{3.7215820946846*^9, 3.7215820961446*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}], "]"}]}], 
  RowBox[{"k", " ", "r"}]]], "Output",
 CellChangeTimes->{3.7215820966166*^9, 3.721589860988*^9, 3.721590083575*^9, 
  3.721716006418676*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G", "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", ">", "0"}], ",", " ", 
        RowBox[{"k", ">", "0"}]}], "}"}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "b"}], " ", "r"}], "]"}], "/", "r"}], " ", "inner3D",
          " ", 
         RowBox[{"r", "^", "2"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"b", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.720981647868*^9, 3.7209816544049997`*^9}, {
  3.7209817571940002`*^9, 3.7209818041219997`*^9}, {3.720981864355*^9, 
  3.7209818659119997`*^9}, {3.7211485063970003`*^9, 3.721148529979*^9}, {
  3.7211485832939997`*^9, 3.721148627988*^9}, {3.721589257999*^9, 
  3.721589258332*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["k", "2"], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.720981656791*^9, {3.7209817628199997`*^9, 3.7209818049630003`*^9}, 
   3.7209818670150003`*^9, {3.721148606686*^9, 3.721148652278*^9}, 
   3.721149539057*^9, 3.7215817664586*^9, 3.721589260461*^9, 3.72158986146*^9,
    3.721590084145*^9, 3.7217160069727077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibp", " ", "=", " ", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"r", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"r", "^", "2"}], "+", 
         RowBox[{"a", "^", "2"}]}], "]"}]}], ",", "r"}], "]"}], "]"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"r", " ", "inner3D"}], ",", "r"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.721149575461*^9, 3.721149601296*^9}, {3.72114978356*^9, 
   3.721149831781*^9}, {3.721150077575*^9, 3.721150081833*^9}, {
   3.721150430348*^9, 3.721150442705*^9}, {3.721150657901*^9, 
   3.721150667993*^9}, 3.7211514162650003`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{{3.72114959258*^9, 3.72114960175*^9}, {
   3.7211497851280003`*^9, 3.721149832178*^9}, 3.721150082398*^9, {
   3.72115043204*^9, 3.721150443257*^9}, {3.721150659344*^9, 
   3.7211506690480003`*^9}, 3.721151416884*^9, 3.7215817765506*^9, 
   3.721589861565*^9, 3.721590084273*^9, 3.721716006990709*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ft3d1", " ", "=", " ", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}]}], "}"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"-", "ibp"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7196404911911726`*^9, 3.7196405894227905`*^9}, {
   3.719692517163888*^9, 3.719692525837384*^9}, {3.719729538887409*^9, 
   3.7197295511101084`*^9}, {3.719729640866242*^9, 3.7197296539239893`*^9}, {
   3.721150703519*^9, 3.721150729847*^9}, {3.721150779554*^9, 
   3.721150791356*^9}, {3.721150886156*^9, 3.721150890186*^9}, 
   3.72115107173*^9, 3.721151421809*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "a", " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "a", " ", "k", " ", "\[Pi]"}]}], "]"}]}], 
  "k"]], "Output",
 CellChangeTimes->{
  3.7196405906458607`*^9, {3.719692518040938*^9, 3.719692526523423*^9}, {
   3.721150766658*^9, 3.721150792061*^9}, 3.7211510744849997`*^9, 
   3.721151422887*^9, 3.7215817813156*^9, 3.721589861999*^9, 
   3.721590084785*^9, 3.721716007428734*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", ">", "0"}], ",", " ", 
     RowBox[{"r", ">", "0"}]}], "}"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"ft3d1", " ", "inner3D", " ", 
      RowBox[{"k", "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.719713266837701*^9, 3.719713312847333*^9}, {
   3.719713358120922*^9, 3.7197133615331173`*^9}, {3.719713470028323*^9, 
   3.7197134888844013`*^9}, {3.719713584821889*^9, 3.7197136946421704`*^9}, {
   3.719713803842416*^9, 3.7197138048774753`*^9}, {3.719713900735958*^9, 
   3.719713928599552*^9}, {3.7197141092328835`*^9, 3.7197141302610865`*^9}, 
   3.7197141648120623`*^9, {3.7197142177610908`*^9, 3.7197142185241346`*^9}, {
   3.719714262904673*^9, 3.719714267689947*^9}, {3.7197144028876796`*^9, 
   3.719714476046864*^9}, {3.719714537819397*^9, 3.719714567869116*^9}, {
   3.7197145998219433`*^9, 3.7197146064423223`*^9}, {3.719714637027072*^9, 
   3.7197146613994656`*^9}, {3.7197147135824504`*^9, 
   3.7197147310814514`*^9}, {3.719717442978563*^9, 3.7197175203279867`*^9}, {
   3.721150913474*^9, 3.721150993725*^9}, {3.721151054924*^9, 
   3.721151058296*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{
    SuperscriptBox["a", "2"], "+", 
    SuperscriptBox["r", "2"]}]]]], "Output",
 CellChangeTimes->{{3.7197145545543547`*^9, 3.7197145689861803`*^9}, {
   3.7197146212111673`*^9, 3.719714662312518*^9}, 3.719714731963502*^9, {
   3.7197174986247454`*^9, 3.7197175215190554`*^9}, 3.72115102874*^9, {
   3.721151059576*^9, 3.7211510782279997`*^9}, 3.7215817885556*^9, 
   3.7215898623269997`*^9, 3.721590085951*^9, 3.7217160085627985`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"ft3d1", ",", 
   RowBox[{"a", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7197170124929404`*^9, 3.7197172024358044`*^9}, {
  3.71971729239395*^9, 3.719717292537958*^9}, {3.71971736512811*^9, 
  3.719717365355123*^9}, {3.719717424285494*^9, 3.719717435276122*^9}, {
  3.719719515172086*^9, 3.7197195180032473`*^9}, {3.721151508675*^9, 
  3.721151509611*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["k", "2"], " ", "\[Pi]"}]]], "Output",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.719717044328761*^9, 3.719717202935833*^9}, 
   3.7197172930189857`*^9, 3.719717365724144*^9, {3.7197174248645267`*^9, 
   3.7197174356141415`*^9}, 3.719719518556279*^9, 3.7211515102390003`*^9, 
   3.7215817919616003`*^9, 3.721589862395*^9, 3.7215900861*^9, 
   3.7217160086308026`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inner3Dexp", "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"TrigToExp", "[", "inner3D", "]"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "b"}], " ", "r"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7215810190276003`*^9, 3.7215810675006*^9}, {
  3.7215811737296*^9, 3.7215811760326*^9}, {3.7215812161846*^9, 
  3.7215812745296*^9}, {3.7215813384966*^9, 3.7215814094576*^9}, {
  3.7215814540376*^9, 3.7215815171935997`*^9}, {3.7215816113286*^9, 
  3.7215816117356*^9}, {3.7215818050446*^9, 3.7215818066246*^9}, {
  3.7215821334736*^9, 3.7215821601406*^9}, {3.7215824585615997`*^9, 
  3.7215824636205997`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "b"}], " ", "r"}], "-", 
      RowBox[{
      "2", " ", "\[ImaginaryI]", " ", "k", " ", "\[Pi]", " ", "r"}]}]]}], 
   RowBox[{"k", " ", "r"}]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "b"}], " ", "r"}], "+", 
      RowBox[{
      "2", " ", "\[ImaginaryI]", " ", "k", " ", "\[Pi]", " ", "r"}]}]]}], 
   RowBox[{"k", " ", "r"}]]}]], "Output",
 CellChangeTimes->{{3.7215810573226*^9, 3.7215810678786*^9}, 
   3.7215811763436003`*^9, {3.7215812212876*^9, 3.7215812448816*^9}, 
   3.7215812794306*^9, {3.7215813405366*^9, 3.7215814098686*^9}, {
   3.7215814610146*^9, 3.7215815177796*^9}, 3.7215816127956*^9, 
   3.7215818085836*^9, {3.7215821377256002`*^9, 3.7215821607066*^9}, 
   3.7215824667836*^9, 3.7215898625*^9, 3.7215900862320004`*^9, 
   3.721716008646804*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ft3d2", " ", "=", " ", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", ">", "0"}], ",", " ", 
        RowBox[{"a", ">", "0"}], ",", " ", 
        RowBox[{"b", ">", "0"}]}], "}"}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"r", "^", "2"}], "+", 
             RowBox[{"a", "^", "2"}]}], "]"}]}], ")"}], "inner3Dexp", " ", 
         RowBox[{"r", "^", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"b", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7215820004296*^9, 3.7215820006646*^9}, {
   3.7215821752356*^9, 3.7215821875316*^9}, {3.7215823935406*^9, 
   3.7215824057106*^9}, {3.7215824723766003`*^9, 3.7215824758066*^9}, 
   3.7215833895285997`*^9, {3.7215836018206*^9, 3.7215836137436*^9}, {
   3.7215836781446*^9, 3.7215836832836*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", "+", 
   RowBox[{"\[ImaginaryI]", " ", "a", " ", "k", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    RowBox[{"BesselY", "[", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "k", " ", 
       "\[Pi]"}]}], "]"}]}], "-", 
   RowBox[{"\[ImaginaryI]", " ", "a", " ", "k", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    RowBox[{"BesselY", "[", 
     RowBox[{"1", ",", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "k", " ", "\[Pi]"}]}],
      "]"}]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["k", "2"], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.7215822364416*^9, 3.7215824018136*^9, 3.7215824385546*^9,
   3.7215825177556*^9, 3.7215835849816*^9, 3.7215836598166*^9, 
  3.7215837250486*^9, 3.721589880824*^9, 3.7215901296289997`*^9, 
  3.7217160323541594`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BesselY", "[", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"-", "0.42"}], " ", "I"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.719722723041565*^9, 3.7197227634718776`*^9}, {
   3.7197227988859034`*^9, 3.719722803796184*^9}, {3.719724721476869*^9, 
   3.71972472708319*^9}, {3.7197247916738844`*^9, 3.719724793758003*^9}, 
   3.719725787672852*^9, {3.721151988057*^9, 3.721152005781*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.2146646595267906`"}], "-", 
  RowBox[{"1.3107995851014944`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.7197227332881513`*^9, 3.719722764724949*^9}, {
   3.719722799600944*^9, 3.719722804163205*^9}, 3.719724734127593*^9, 
   3.719724794784062*^9, 3.7197257944412394`*^9, {3.721151989881*^9, 
   3.721152006332*^9}, 3.721590129666*^9, 3.7217160324641657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"BesselY", "[", 
   RowBox[{"1", ",", 
    RowBox[{"0.42", "I"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7197228284885964`*^9, 3.7197228585333147`*^9, {3.7197238604486213`*^9, 
   3.7197238723142996`*^9}, 3.7197247977942343`*^9, {3.7197254636933217`*^9, 
   3.7197254793112144`*^9}, {3.719725612964859*^9, 3.7197256142089305`*^9}, 
   3.719725789679967*^9, {3.7197261326155815`*^9, 3.7197261368258224`*^9}, {
   3.721152011598*^9, 3.72115201266*^9}}],

Cell[BoxData[
 RowBox[{"0.2146646595267906`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.3107995851014944`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.7197228287886133`*^9, 3.719722859215354*^9, 3.7197238732703543`*^9, 
   3.7197247984502716`*^9, {3.719725464428364*^9, 3.719725479635233*^9}, 
   3.71972561455195*^9, 3.719725790559017*^9, {3.7197261334486294`*^9, 
   3.7197261376718707`*^9}, 3.72115201308*^9, 3.7215901296730003`*^9, 
   3.721716032466166*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"2", " ", "I", " ", "a", " ", "k", " ", 
    RowBox[{"Pi", "^", "2"}], " ", 
    RowBox[{"Im", "[", 
     RowBox[{"BesselY", "[", 
      RowBox[{"1", ",", 
       RowBox[{"I", " ", "2", " ", "Pi", " ", "k", " ", "a"}]}], "]"}], "]"}],
     "I"}], ",", 
   RowBox[{"a", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.71972563587817*^9, 3.7197256728322835`*^9}, 
   3.7215792325336*^9, {3.7215802694835997`*^9, 3.7215802997785997`*^9}, {
   3.7215837496686*^9, 3.7215837502506*^9}, {3.7215837817335997`*^9, 
   3.7215837878866*^9}, {3.7215838474796*^9, 3.7215838487136*^9}, {
   3.7215839112226*^9, 3.7215839304166*^9}, {3.721584952606*^9, 
   3.721584955578*^9}}],

Cell[BoxData[
 RowBox[{"-", "2"}]], "Output",
 CellChangeTimes->{
  3.7197256736893325`*^9, 3.7215792329966*^9, {3.7215802750626*^9, 
   3.7215803002595997`*^9}, 3.7215838055945997`*^9, 3.7215838493826*^9, {
   3.7215839126896*^9, 3.7215839309166*^9}, 3.72158504705*^9, 
   3.7215901300150003`*^9, 3.721716032742182*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"I", " ", "a", " ", "k", " ", 
     RowBox[{"Pi", "^", "2"}], " ", 
     RowBox[{"Im", "[", 
      RowBox[{"BesselY", "[", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "2", " ", "Pi", " ", "k", " ", "a"}]}], 
       "]"}], "]"}], "I"}], " ", "-", 
    RowBox[{"I", " ", "a", " ", "k", " ", 
     RowBox[{"Pi", "^", "2"}], " ", 
     RowBox[{"Im", "[", 
      RowBox[{"BesselY", "[", 
       RowBox[{"1", ",", 
        RowBox[{"I", " ", "2", " ", "Pi", " ", "k", " ", "a"}]}], "]"}], 
      "]"}], "I"}]}], ",", 
   RowBox[{"a", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7215840614596*^9, 3.7215842123515997`*^9}, {
  3.7215842534306*^9, 3.7215843278146*^9}, {3.7215849243050003`*^9, 
  3.721584937808*^9}, {3.7215849837320004`*^9, 3.721584998045*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.7215841617586*^9, {3.7215841948576*^9, 3.7215842133746*^9}, 
   3.7215842798396*^9, 3.7215843283286*^9, 3.721585036309*^9, 
   3.721590130315*^9, 3.721716032990196*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"ft3d2", ",", 
   RowBox[{"a", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7215791967806*^9, 3.7215792069835997`*^9}, {
  3.7215822991745996`*^9, 3.7215822993816*^9}, {3.7215825748646*^9, 
  3.7215825750576*^9}}],

Cell[BoxData[
 FractionBox["3", 
  RowBox[{
   SuperscriptBox["k", "2"], " ", "\[Pi]"}]]], "Output",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{3.7215792076046*^9, 3.7215823002116003`*^9, 
  3.7215825755236*^9, 3.7215836673146*^9, 3.7215837296865997`*^9, 
  3.721590130441*^9, 3.721716033087201*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tt", " ", "=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"r", "^", "2"}], "+", 
         RowBox[{"a", "^", "2"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "d", ",", "4"}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"a", "\[Rule]", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.719753760664816*^9, 3.719753789434461*^9}, {
  3.7197538280096674`*^9, 3.7197538566153035`*^9}, {3.7197539027479424`*^9, 
  3.719753908528273*^9}, {3.7197539442813177`*^9, 3.719753944536332*^9}, {
  3.7197539756051097`*^9, 3.719754011125141*^9}, {3.7197546035580263`*^9, 
  3.719754630478566*^9}, {3.719754671946938*^9, 3.719754699046488*^9}, {
  3.7197547479472847`*^9, 3.7197547777479897`*^9}, {3.720980271486*^9, 
  3.720980271604*^9}, {3.720980592442*^9, 3.7209806244040003`*^9}, {
  3.7209807918529997`*^9, 3.7209808080620003`*^9}, {3.721585522736*^9, 
  3.72158555955*^9}, {3.721585641208*^9, 3.721585665085*^9}, {
  3.721586436922*^9, 3.721586450796*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["d", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["d", "2"]}], "-", 
      SuperscriptBox["r", "2"]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"5", "/", "2"}]]}]], "+", 
  FractionBox[
   SuperscriptBox["d", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["d", "2"], "+", 
      SuperscriptBox["r", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]], "+", 
  FractionBox["1", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["d", "2"], "+", 
     SuperscriptBox["r", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["d", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["d", "3"]}], "+", 
      RowBox[{"3", " ", "d", " ", 
       SuperscriptBox["r", "2"]}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"7", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["d", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"8", " ", 
       SuperscriptBox["d", "4"]}], "-", 
      RowBox[{"24", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["r", "4"]}]}], ")"}]}], 
   RowBox[{"8", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], 
     RowBox[{"9", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.7197537900384955`*^9, {3.7197538320769005`*^9, 3.71975385707533*^9}, {
   3.7197539054450965`*^9, 3.719753908918295*^9}, 3.7197539450093594`*^9, {
   3.719753977462216*^9, 3.719754011485162*^9}, 3.719754630969594*^9, {
   3.7197546725089703`*^9, 3.7197546996515226`*^9}, {3.719754755120695*^9, 
   3.7197547783410234`*^9}, 3.720980272014*^9, {3.720980602502*^9, 
   3.72098062494*^9}, {3.720980792416*^9, 3.720980808756*^9}, {
   3.7215855233380003`*^9, 3.7215855602279997`*^9}, {3.7215856468719997`*^9, 
   3.721585665921*^9}, {3.721586437672*^9, 3.721586451318*^9}, 
   3.721590130466*^9, 3.7217160331032023`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "n_", "]"}], ":=", 
  RowBox[{"Apart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "d"}], ")"}], "^", "n"}], " ", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"r", "^", "2"}], "+", 
            RowBox[{"a", "^", "2"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "n"}], "}"}]}], "]"}], "/", 
       RowBox[{"n", "!"}]}]}], "/.", 
     RowBox[{"a", "\[Rule]", "d"}]}], ",", "r"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7215866448050003`*^9, 3.721586709632*^9}, {
  3.721586816469*^9, 3.721586827738*^9}, {3.72158694687*^9, 
  3.721586947079*^9}, {3.721587642244*^9, 3.72158764635*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.721586871913*^9, 3.721586872521*^9}, {
  3.7215869500439997`*^9, 3.721586950237*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["d", "2"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d", "2"], "+", 
     SuperscriptBox["r", "2"]}], ")"}], 
   RowBox[{"3", "/", "2"}]]]], "Output",
 CellChangeTimes->{3.721586873109*^9, 3.721586950491*^9, 3.721587649543*^9, 
  3.721590130479*^9, 3.721716033108203*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", 
      RowBox[{"r", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", "^", "2"}], "+", 
          RowBox[{"1", "^", "2"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"3", "/", "2"}], ")"}]}]}]}], ")"}], "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "Pi", " ", "1", "r"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7209800692209997`*^9, 3.7209801616619997`*^9}, {
   3.72098153996*^9, 3.720981546592*^9}, {3.721585202229*^9, 
   3.721585203343*^9}, 3.721585251856*^9, 3.721586879374*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAnX5iBjFkiz7OCZ26MWpSPZ5a7DpX
IGk/oQQdjvT8Dj/ZTYpyICB5Py7aEnCe+i4/MjfPowrYgj9TY1faLWtBP3dH
WQ4FIIk/xTlo0h/zTj+8V+N4/2ePPxsmL2CqKVg/AbS28fzXkj+lbzCA72Fh
PyS8+yb6+5U/TteC/dmiZz9GxEBc9x+ZP5JnMMge1m4/aMyFkfRDnD/wkTut
B31zP4vUysbxZ58/3LLjc2IGeD9X7gd+90WhP+JsH2QQBn0/aHKqGPbXoj8+
Yhs8cz2BP3n2TLP0aaQ/+rZRHc8xhD+Keu9N8/ulP4RfBwdrX4c/rYI0g/Af
qT8zXH7CXGOOP74G1x3vsao/CadhQAcckT/Qinm47UOsPyOWgj5cIZM/8pK+
7epnrz9mAkX5D3uXP4KLMMT0fLA/w8MF5GnOmT+KzYER9EWxP3jKQ4O2Opw/
nFEkrPLXsj+3lMo67q2gP6STdfnxoLM/C6jG4MAHoj+t1cZG8Wm0P5g8l/vY
bKM/vllp4e/7tT+nl0B5h1emP+FhrhbtH7k/W5KojRClrD/qo/9j7Oi5P2LG
xzxVT64/8uVQseuxuj+IiPqz/QCwPwRq80vqQ7w/a8/J1me/sT8mcjiB52e/
P/EgBV5zZbU/NkHh9fDXwj90+IbiBSW9PzriiZxwPMM/nKx4LVAjvj8+gzJD
8KDDPzRYHX05Ir8/R8WDkO9pxD/N+U99eZDAP1hJJivu+8U/s8KnXJ6Nwj9w
xILxMUnIP0eIr9p2X8U/otAfbQ==
     "]], 
    LineBox[{{0.9274309372305529, -0.1608666506126815}, {
     0.9346440771605611, -0.14549054602035327`}, {
     0.9610576015065643, -0.08726235220773736}, {1.0138846501985708`, 
     0.03058881028405801}, {1.0169660017821842`, 0.037294615805625375`}, {
     1.0200473533657974`, 0.04396472782184487}, {1.0262100565330243`, 
     0.057187600633381186`}, {1.038535462867478, 0.08309358383122598}, {
     1.0631862755363852`, 0.1322091879908467}, {1.0662676271199987`, 
     0.13805150724767307`}, {1.0693489787036121`, 0.14382063429741815`}, {
     1.0755116818708388`, 0.15513117464326978`}, {1.082253161303094, 
     0.16697583845149408`}}], LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAnFsVsZZX9j9HiK/adl/FP0Qncl2X
XvY/jHMnTxANxT85crivA8z2P6ZhWUQoeL8/0P87XnHZ9j9gzWB5zB++P2aN
vwzf5vY/8/KgILjFvD+SqMZpugH3P3cZx8kHDbo/6t7UI3E39z99AGBG9I20
P5xL8Zfeovc/kQeSyxv4oj8y2XRGTLD3P+/73TbyNaA/yGb49Lm99z+mtpBN
neqaP/SB/1GV2Pc/Pm1taSbnjz9NuA0MTA74P9sKGbpQ8Ha//iQqgLl5+D83
UPRis9Gnv5SyrS4nh/g/fziDLUNZqr8qQDHdlJT4P157Lerf2qy/Vls4OnCv
+D9qxFp+oeWwv6+RRvQm5fg/9P0CC/6stb9GH8qilPL4PwnDWKWc1ba/3KxN
UQIA+T9RVcsUUvq3vwjIVK7dGvk/2f4TFJQ3ur9g/mJolFD5PxgwouyXfr6/
9ovmFgJe+T980hWWDIW/v4wZasVva/k/ibn0b2ZDwL+5NHEiS4b5PwMqRjzr
PcG/Emt/3AG8+T9kTZ503hTDv6j4Aotvyfk/IlzhrByEw78+hoY53db5P4f0
R1Wv8MO/xhk5iUXs+T/hArNFR5fEvxBk7Xo=
     "]], LineBox[CompressedData["
1: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
GBiekwrEPKGvV/x0yZCa0uH1wSwIxwn0O6TpkyExs/+ISEgwjkBxJydNyKCf
lrpX4FMIDkiQ3GF4gQxP/eX8aUi38PputoDLdmRYbXMKTS6+hX3avy9GOZCB
4UyLl7DsbezxoX30gSsZCtX4lUcU72D7g8aJ6n5k+E4rb5AoGY5nHx6it7lB
hqrVThO/rHBsZU26FhREhunzg6fXuCKwRfi8ecdtMljsdivMXY7Aes8DhQ4m
kMFor2lKYGoUfuBmH2WaTN1vWZ8usx6FNel0/11NIwOPStPqHstofFyW73VN
DhlWTlae/UuIwR143WAknwx/TW1Nup1isIrZ2+6vRWRof+id1NwVgxUDK/P3
VJKhaF1mYueFWFzDTeE+WU1dX377O/puLJYp9Q51qCMDC0GggvN3LJZ8AhcL
W8hg2OsuohcchwvspZ71tJHhTE652hqOw+S1HdpvO8mQG2PRWLkZh4kS09Kk
fjL4bYlGsnnE45TmzvQjg2RYDkxNri2Oxzx6hayWD8ngWT9iqDMVj+PfhPv7
DlPrNegqcqKjYHYvt68pT8hwFPyqdhEpOJLZ1KrpKRm+GEtNmspRMFO2ysjT
Z2RwDh19+uc4BYcqkI8vz5BhjIEmjNOIgrcH6Gu5XpHhXMKbH6kXKDjA8rPY
/rdk8FGUVaO4UfDa0ihF/z0Z3MN1W9avU7B3aBOt60fqPCWqTzy9TcE/BTI9
IxfIEPu9S04kjoKv3A3+UPaVDD2ZTKFPUyh4ETmYDX6jYvm1e2tZFOw8qXd/
bpkMd2v+zMTmU/AnJ4VD9L/JsHH/PV9iEQV/5y476bBGhj9qfM95Sqj67aKW
D/6RgZdN5mdnMQXTXEx22btNhjlnHqWEQgpm5dgREE0nBv057LmUXArmabkZ
u8QoBh9dfdw70ylY+MJa7mlWMTgrnMwpQL3v7GK5UlfPLgZOSyakvHAKlqv/
2MtLEINbSkxOlgEUfPCc1YQ3rxiIvSOvaF+h4OP0E3PTAmKw9vL1irMNBZ+s
0l1VFRYD69c0YwOnKdjIvIc5W1QMvgi5kM4do2DLrUNCW+JiEFHSVyC3l4Lt
yqplbCTFQKtM8CzipWCv9UwDSVkxiM+bMrw4EI8DCrkvhO0XgxuZV44pxcXj
26ciPBYUxaCzwpEx2ywep+Z4J1WpiIF61FK63XQcztNeLOZUE4OvOcH0Y0lx
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
k0+U/jkZhwn523GZVjQQQWdX6kvEY6pdKFbemgYF1iMrLYN4LO+9PeqKDQ3m
0j7qTuHxeE11c+jAHobPJmsT+ZfxWNnmX1CgPQ3rJxNEmiWYfndchzXHkQYV
07O5oTocvFG3wUfJieE7Q2CvkcnBm15NeDbtp4E6uiFVvYGD1eM13XcepOEa
PVVk8IqDNRVCXN840+Cr4F3gMoeLte7UHgxxpeHgRo/iZAUu1vb56SRyiAbu
78Rl1w25WHe+6t5T7jR0zN7GHXPlYrCt3H3Di4aV045HfHO5WG9i2NrWh4ZN
G6ykymq42CBXxeqDLw0bWGqdb+9wsdFWb8sIfxoOcd4pyg5wsclgqZlEIA2R
X/oHLL9xsRnng3Ehi4bDAvQsYoaLLRQVDdWCaEjze7v2jAQP7+hw02sLpmH3
dwflluU8bOV7DjmE0mAs8d3iGc3D1pJvdIeP0KAhVKE/pMLDtjWEdmw4k686
fBtW5eE9uw9slo5k9Dso4vJFg4ftJ0+rF0XRoDz/66vXm3nY8VS/qlYMDbIH
7F4+ZMb7tsluuBtLgxclLtzArN//2mHt/jgaHI2klE4x5x3k5ij9iKeh+kza
njAmnsvqZ4pcLg2tcnltuxg8bp2L5Zcm0GCJlr9bw+B197Mly/k0XFkTYTYz
j4c9F2St3Cqg4d9kRmvPNBd71z6SfZjE4LtkvevSVy723bNguWsKDX6Z2csz
+7nY//eOJeOpNAime8LDGD4D8lIXCtJp0Bl9OeXF8N01W/6bWSYN1z0T7KKz
uVjZ41rnvCzGH7+lWhUjuJjfZVV8/xgN9edH87yZfu6d6oe4jBM0BBpORFtq
cfH27Ggn6xwaMoRPWz5ZyMX5Uwu3LMpl+C312Sw8wsH27fA9+zQN5/VDnENy
OLh+7bO7DgU0JJjaWN305mDpo34lsmdoOLlPov6BNgff25e7v+A8DemtP2WM
nsRjvZ+jXcUVNLgnSot7jMThArukUs+LNIyNT3AjK+PwVBPBVa6i4WvgMftk
vzh8hW+pU1lDw82Mupnm90y/uKKkrL6BhlKptfGDMbFYEL+Vd6SRhm4Fn7qq
NzF46EP3wS3XGT7+LUkX0Y/BZ2pmLbveQoO35keP0t9ReImJY8LtdmZ+RlJt
BCJw0MXvzgkdNOSHpQfaJIfjh9L8rSZ3aYhgq3Z/fRyGkwdqx+7eZ+pDf/MI
4XgEzwqScO1+SsO2Qqe9/zMPxp9Pt6A3b5n6c9BJzDXHBxvPsZM9/56Gtz0i
tz0+e+HzniPjhz7QsJU14TC8xRMfUJOp/PSZhgHvtiijx274yZ0guR8/aGgf
N2EJ9+/FquvFJmtGaZhRLHFId7XHaVmF3cG/aBj9ILLN45MtNt1/L2lykgZp
a5HwnW/NcfEtV/drf2gYfGh2sPOTARZW+rM9aooGqyKPIbdBHeyclrFi2zRT
P2OPrQ0cUMHNo4q/Z2Zo2GckhP4R5s3/B9jnOJI=
     "]], LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAk+y+SKyJ2j9HiK/adl/FP2gVFywo
lNo/M5b9CWo/xT/GMZKO4/naP7Ect0ja/MM/hGqIU1rF2z92YoXKqkvBPwDc
dN1HXN0/Tt2lmdyYtj8warKOJY/dP3pmUA1T/7Q/X/jvPwPC3T9ffptlvmCz
P74Ua6K+J94/CVM7FU0VsD97TWFnNfPeP32co7bJlqI/e9+meBFF4D/tYkXz
sIaTv5KmRVGAXuA/a4+xim/Emr+qbeQp73fgP835tXTaA6G/2vsh28yq4D9y
uvzJek2ovzgYnT2IEOE/aAZ5OUh2s7/2UJMC/9vhPzQjp0Rb+8C/Dhgy2231
4T9cUvbpmd/Bvybf0LPcDuI/n0mMOJzCwr9VbQ5lukHiPxOSb5l0hMS/CFxX
ludD4j/hArNFR5fEv1fDn+8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-0.1608666506126815, 0.16697583845149408`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.720980111666*^9, 3.7209801622609997`*^9}, {
   3.720981540693*^9, 3.7209815470030003`*^9}, 3.7215852042469997`*^9, 
   3.7215852526219997`*^9, 3.721586880308*^9, 3.721590130528*^9, 
   3.721716033130204*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", "x_", "]"}], ":=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", ">", "0"}], ",", " ", 
      RowBox[{"k", ">", "0"}]}], "}"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"x", " ", "inner3D", " ", 
       RowBox[{"r", "^", "2"}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7215871620690002`*^9, 3.7215871837209997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fs", "[", "n_", "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"s", "[", "n", "]"}], ",", "d", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"2", "n"}], "]"}]}], "]"}], "]"}], "*", 
    RowBox[{"d", "^", 
     RowBox[{"Range", "[", 
      RowBox[{"2", "n"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.721588633201*^9, 3.72158867424*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs0", " ", "=", " ", 
  RowBox[{"ft3d1", "/.", 
   RowBox[{"a", "\[Rule]", "d"}]}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "d", " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], 
  "k"]], "Output",
 CellChangeTimes->{3.721716060278757*^9, 3.721716863243684*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs1", "=", 
  RowBox[{"Fs", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.7217159157364893`*^9, 3.721715920045736*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
  RowBox[{"BesselK", "[", 
   RowBox[{"0", ",", 
    RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.7217159205277634`*^9, 3.7217159362566633`*^9}, 
   3.721716033740239*^9, 3.7217168689200087`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs2", "=", 
  RowBox[{"Fs", "[", "2", "]"}]}]], "Input",
 CellChangeTimes->{{3.72158867708*^9, 3.721588681874*^9}, {3.721588878873*^9, 
  3.721588879059*^9}, {3.721588912252*^9, 3.721588916153*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["d", "3"], " ", "k", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.721588683824*^9, 3.721588880289*^9, 3.721588917163*^9, 
  3.721590143699*^9, 3.7217160344572797`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs3", "=", 
  RowBox[{"Fs", "[", "3", "]"}]}]], "Input",
 CellChangeTimes->{{3.7215889545629997`*^9, 3.721588959441*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "4"}], " ", 
   SuperscriptBox["d", "3"], " ", "k", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["8", "3"], " ", 
   SuperscriptBox["d", "4"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox["\[Pi]", "3"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.721588960634*^9, 3.721590144551*^9, 
  3.7217160351423187`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs4", "=", 
  RowBox[{"Fs", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.721588962192*^9, 3.721588966924*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["d", "3"], " ", "k", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["d", "4"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox["\[Pi]", "3"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   SuperscriptBox["d", "5"], " ", 
   SuperscriptBox["k", "3"], " ", 
   SuperscriptBox["\[Pi]", "4"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"3", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.721588968602*^9, 3.721590145666*^9, 3.721716036127375*^9}
  ]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs5", "=", 
  RowBox[{"Fs", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.721588974531*^9, 3.721588981828*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   SuperscriptBox["d", "4"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox["\[Pi]", "3"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
  RowBox[{
   FractionBox["8", "3"], " ", 
   SuperscriptBox["d", "5"], " ", 
   SuperscriptBox["k", "3"], " ", 
   SuperscriptBox["\[Pi]", "4"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"3", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["8", "15"], " ", 
   SuperscriptBox["d", "6"], " ", 
   SuperscriptBox["k", "4"], " ", 
   SuperscriptBox["\[Pi]", "5"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"4", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.721588983326*^9, 3.721590146921*^9, 
  3.7217160371274323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"terms", "=", 
  RowBox[{"{", 
   RowBox[{
   "fs0", ",", "fs1", ",", "fs2", ",", "fs3", ",", "fs4", ",", "fs5"}], 
   "}"}]}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.72159147831*^9, 3.7215914819969997`*^9}, {
  3.721591559409*^9, 3.721591580131*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "d", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], ",", 
   RowBox[{"4", " ", 
    SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["8", "3"], " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["4", "3"], " ", 
     SuperscriptBox["d", "5"], " ", 
     SuperscriptBox["k", "3"], " ", 
     SuperscriptBox["\[Pi]", "4"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"3", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
    RowBox[{
     FractionBox["8", "3"], " ", 
     SuperscriptBox["d", "5"], " ", 
     SuperscriptBox["k", "3"], " ", 
     SuperscriptBox["\[Pi]", "4"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"3", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["8", "15"], " ", 
     SuperscriptBox["d", "6"], " ", 
     SuperscriptBox["k", "4"], " ", 
     SuperscriptBox["\[Pi]", "5"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"4", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7215914828929996`*^9, {3.721591574642*^9, 3.721591580453*^9}, 
   3.7217160374584513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "=", 
  RowBox[{"Accumulate", "[", "terms", "]"}]}]], "Input",
 CellChangeTimes->{{3.721591484329*^9, 3.721591530677*^9}, {3.721591583582*^9,
   3.721591603266*^9}, {3.721716456668429*^9, 3.721716481902872*^9}, {
  3.7217166884766874`*^9, 3.721716689204729*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "d", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], ",", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "d", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"]}], 
   ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "d", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "d", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], "+", 
    RowBox[{
     FractionBox["8", "3"], " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "d", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], "+", 
    RowBox[{
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
    RowBox[{
     FractionBox["4", "3"], " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["4", "3"], " ", 
     SuperscriptBox["d", "5"], " ", 
     SuperscriptBox["k", "3"], " ", 
     SuperscriptBox["\[Pi]", "4"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"3", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["d", "2"], " ", "\[Pi]", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "d", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], "+", 
    RowBox[{
     SuperscriptBox["d", "3"], " ", "k", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["2", "3"], " ", 
     SuperscriptBox["d", "4"], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Pi]", "3"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "-", 
    RowBox[{
     FractionBox["4", "3"], " ", 
     SuperscriptBox["d", "5"], " ", 
     SuperscriptBox["k", "3"], " ", 
     SuperscriptBox["\[Pi]", "4"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"3", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["8", "15"], " ", 
     SuperscriptBox["d", "6"], " ", 
     SuperscriptBox["k", "4"], " ", 
     SuperscriptBox["\[Pi]", "5"], " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"4", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7215914878859997`*^9, 3.7215914922200003`*^9}, {
   3.7215915252320004`*^9, 3.7215915309960003`*^9}, {3.721591585486*^9, 
   3.721591603576*^9}, 3.721716037467452*^9, {3.7217164607336617`*^9, 
   3.7217164827289195`*^9}, 3.7217166903717957`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"G", ",", "T"}], "}"}], "/.", 
      RowBox[{"d", "\[Rule]", "0.1"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<G\>\"", ",", "\"\<T0\>\"", ",", "\"\<T1\>\"", ",", "\"\<T2\>\"", 
      ",", "\"\<T3\>\"", ",", "\"\<T4\>\"", ",", "\"\<T5\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.721591595961*^9, 3.7215916242679996`*^9}, {
   3.721591681087*^9, 3.721591681821*^9}, {3.721591870623*^9, 
   3.721591922323*^9}, 3.721716414621024*^9, {3.721716485479077*^9, 
   3.7217164933445263`*^9}, {3.721716553266954*^9, 3.7217165573621883`*^9}, {
   3.721716625591091*^9, 3.7217166368317337`*^9}, {3.721716693277962*^9, 
   3.721716694426028*^9}, {3.721718664836729*^9, 3.7217186771554337`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
7jf0F6PA/wDgKB6k
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
vHKB8j/GY+eg
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
2w==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
fiwukjFYzeBK9h0K/A8zzVUG
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVjnk81Pkfx2doGEfrTFiEr9JSispulPcHOSLSl6jYyDGRKyEVbUSuSG5F
QhMrxpltRmRcJc3MKh1shn4SbctGYxxjmO33x+vxejwfr+cfLx3fcDxAjEAg
FH3P/3u0yiF9n9U3WOx3ThN5DsCDKos7DQXfYP/IsQDVkj+hUD1Zs9yHB6k/
+9rLmbBh4SOnyjmMByFbonXGpdngRttoIozlQcpfoUMSEyxQRNW2HoU80KGS
nKwKWZARwApfz+HB3fvcxUAiC+IbFLsums9DnRINa/vYD4G2dym4Ch/yza3P
mb/vg6dyn2dFGB9uYy7h3W19sHl4ZyzNmA/lSdT+a6V9MB7clUV24sOgXq31
I98+8Mr+RH+SyIdVVd197TPPwGXEUMZwjg8qnpsJ79c/g73n6PXirAUQBHHo
H871woDI/GTE8ALIe0nt1fXsBUpmh+zY5AKQPRKnMqx7Ief3p0GtxEUwejzi
NKLcC19GX2MRPy9Cw8sy3jFGD5Q4zhWOViwCgdpdfUmqB9b0DOIZF5cgQws/
qN7TBXlNNCP9lCXoe5PIGm7oAgNkzM3LW4LSYmsH+p0ucPf8xexs/RIMlWnr
v4zpgvps2/ktn5ZAMkvJIHh7F/is+QbmuSwD0tRvJJd2Qve7YpdwfQG47X3y
P6dcJuT5Hp3n7xLAZuVXMslJTKDM/FAUhwTARuTxV9FMkBa/OpZ2XAABsdv4
1ceY4GIUGEa9LgDN5alLBzcxYTRpd8bwVwFwhs3unvDpAIEx+5k1fQVaDVkU
/Y52YLUlB/f3rMBed7vXppXtUGqH5I68XAHpW/8QTme2g+Wvze4nv6xAwNup
mq1e7ZCaeuvTBQ0hTK4SeQYrbaAyFiBeFy+Ep2pDewUWbWCcsWahenAV1G+X
PXUdaQWTIKE/zX0V3spUa9v3tsJuW0G6lf8qUKV/PeFZ1wqmhIW3IVdWwYrS
kcqNb4V9UTNhnS3f/eG+Rgf9VrD3Gik9o7sGr22V3hZdZIDPtta1tpU1YDB/
byw3oYOvFF0PlxLBeeOobNlNdPCbbHGYUhHB8i4jpZsydKCUNRYomIhg952r
Lh8mHkGIcrURJVAEjLOVSuVFjyBGWHhS7o0Iqh0I01fWPQK7SbOxnR4ERCxa
5dyfbgHK4OvplF8JaJHAwPkjLZDEDBOM+hHQ55+xHe7sFui8XbEh8ywBUR9N
JDvWtYD5YelDf6cR0NiB9D+JES2wgz5ML28joFS629Hk5YewMf1CjqIuEZlt
6wy1UXkIpjGKZUFbiSgnwqs9i/wQ3PxraUwjIro3Fn36s6AZsi0+9IWZE5Gc
88PzPWPNIMOzE/W7EdGw5juzzQ+aQeS5MSQxhYiKrsSVx1g2w9T2P2zmp4lo
8EhswvDFJtC9HBpgyCOiC3FWhaSwJvBi6V3zXSYi9Xuxxvt9m2DgTG7PAEkM
kfs+NnMcmqC16qw1TUsMRX+bMruo0QQZOoaWFBcxpKpjLBztbATjDWX7hprF
0PXeO69TlBshVpi2q+2SOMq3WSrg1tYDJ8ov71KCOPKvuT5zragetGf28X9J
FUc+lOx2y6R66OF+/aMlXxxVXMn25nnWg2zHUbP6BnF0I7WLZS5bD6UJOpYV
k+IoY3bsb4ezddApwXBOxdehyuFa7iMbGkgqfA5yMyAh9fjcn5a1a2Ahxcvm
7k4S0jH+sJ2rUAOTawPaX0xJaPdS6Rm2WA08nWa8u2JNQjfkctxeTTyA5L7r
NjVeJLTR84VPSPUDkIjfoSOWRULnegPxN7u/89fzQ/U8EnqoaRqs5VYNJDbJ
TqZdArnrMrlTjVUgG1rix+2WQFTfqxLB1CpQXr8rvr5fAqVL4pLLBVWg5+TD
cB2SQPlHGSf3xFXBAXarYQlPAlXrGZKN7KrgKjtcfruBJAr1O1eqPFYJBM7w
sHOhJArmSlkFqFTCCocWkhNBRk5FFlh7GRW0Xp4qPnCBjGr/mPv8Mp8KVoMb
+hd+I6PxOsuCf9OpkP7usr5nBhmlK9xPhmgqqH5wGseqyGi0OHzYwoEKpnMz
Hi0jZJRRjqxr+ffgrJKR9ZCdFBohupvJ4vfgk0edmpaWNNpyecfjI5sqwDI1
LLSPJoMkVkMZKlgZ5K/Rpay916P8ImFDV24JeGp0Hxrh/YC8hWEdHoW3QJZp
OK17VB71/stpgN4CCNhTwT++TQElHH93uep4HsT8dgHX5isge5XHqy9P5MC1
L7mDHI4iamt+I/QOvwmHDOR+l72thCh6gspNdZmQSTNlHjqljBxr5U+Pj6VD
v+s9YdTeDShe9fi/UZtTgckOz9gmroLIoR/rLo9cg6YzCYjFVUHpEvITXRWJ
oOUIv4Q93IgOx49KqtESwFrklXg3ThUJDdd5SUrGg//bjm/0o2rofJhrzepg
HFgkXG05pa2OzkfILOzUuAQ54XOPZafU0dxnxkRxYwyMx9+fvPvkR1TQSVVL
xqPhnwCGf1eKBnpVqvYmBo+E2VBFSfYpTYTPJSSxvCKg7uALIWW7FtrUnvQ2
JDgcJgN3morztdAkkWfbdykE1Gv+yk1hb0JDajamvkVBkOhzroLtqI0i3dcK
cn46DYtCtUxHhjZqzHratvrMH7Y+LrzVr6eDNPihWvY0X9jj13tYIU0HSb4y
sV035QPMkg2qLL4OEpWtr9ZxOwlbmRvSnT11URJVLeQYxROcSNOar57oovy4
581arGMw+36i+7kBhgZ7VLZsAXcIL8lUSsvC0IPGfY42am7AIup9dcjGUPQN
Gaa+vBsYnG7tl839vocFWfwg6QYTxlMJNwswpL/jvcvUvCsce4ZmC+9gyDxy
rfj5gCtYfeOxKmsw9GfOpL1Tmiuo2J9I7nmGIUrVHnmbVRwiabOnkp9jyO7E
V//78zgMKKbst3+BIT31DxlS0zhc5zbPv+BgiOP44jD3LxwIkev9Bt9gqHFP
fWQTHYcvd5gw/hFDmvu39ipE42An7vEj9ROGrAzSU+tCcKAGziwETGFoLpZE
OuyPg/cu9bq/v2AolDukW+yKw+u+SI25ue//4mR7vU1wMDaSXmriYciszllP
3QCHG7llg1F8DCkIRnYM6eBw8CQ7fWkJQ1kSSTbeCjhUdvtRWgUYikqOOLRV
Cod1Pwks44QYulHqtjxPwOHUjZuaFmsYKjt+y6F36Qg84W1ZFokwRA+ptbg1
ewT+A5sjdjw=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ZDTI0MjWWRIIMPSclvd8WJUM/wOoV8PS
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 10}, {0., 0.25561512383426027`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"G\"", "\"T0\"", "\"T1\"", "\"T2\"", "\"T3\"", "\"T4\"", "\"T5\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7217186782804976`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"G", ",", 
     RowBox[{
      RowBox[{"T", "[", 
       RowBox[{"[", "6", "]"}], "]"}], "/.", 
      RowBox[{"d", "\[Rule]", "0.1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.721590889207*^9, 3.721590997111*^9}, {3.721591051177*^9,
    3.721591116358*^9}, {3.721591161237*^9, 3.721591209816*^9}, 
   3.721591635472*^9, 3.721591753801*^9, 3.7215918109700003`*^9, {
   3.7217169178468065`*^9, 3.721716941122138*^9}, {3.7217190180379305`*^9, 
   3.7217190181889396`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 10}, {0., 0.2574854992171706}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"G", 
       RowBox[{
         RowBox[{"T", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
         "/.", "\[VeryThinSpace]", 
         RowBox[{"d", "\[Rule]", "0.1`"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.721590914179*^9, 3.7215909976070004`*^9}, 
   3.721591083277*^9, {3.721591116885*^9, 3.721591230601*^9}, {
   3.721591324325*^9, 3.721591345955*^9}, {3.721591779742*^9, 
   3.721591811337*^9}, 3.721716037749468*^9, {3.7217169259162683`*^9, 
   3.721716941454157*^9}, 3.7217190187429714`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"G", "-", 
        RowBox[{"T", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.721718892902774*^9, 3.721718893062783*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}], "256"]], "Output",
 CellChangeTimes->{3.721718899456148*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"G", "-", 
     RowBox[{"T", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["k", "4"], " ", 
    SuperscriptBox["\[Pi]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["d", "2"], " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], 
   SuperscriptBox["k", "2"]], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["d", "4"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], "2"]}], "-", 
  FractionBox[
   RowBox[{"4", " ", "d", " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"1", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], 
   RowBox[{
    SuperscriptBox["k", "3"], " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"8", " ", 
    SuperscriptBox["d", "3"], " ", "\[Pi]", " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"1", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "k"], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["d", "2"], " ", 
    SuperscriptBox[
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], "2"]}], 
   SuperscriptBox["k", "2"]], "-", 
  RowBox[{
   FractionBox["16", "3"], " ", 
   SuperscriptBox["d", "4"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["32", "3"], " ", 
   SuperscriptBox["d", "6"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox["\[Pi]", "4"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["32", "3"], " ", 
   SuperscriptBox["d", "5"], " ", "k", " ", 
   SuperscriptBox["\[Pi]", "3"], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"1", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"2", ",", 
     RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["64", "9"], " ", 
   SuperscriptBox["d", "8"], " ", 
   SuperscriptBox["k", "4"], " ", 
   SuperscriptBox["\[Pi]", "6"], " ", 
   SuperscriptBox[
    RowBox[{"BesselK", "[", 
     RowBox[{"2", ",", 
      RowBox[{"2", " ", "d", " ", "k", " ", "\[Pi]"}]}], "]"}], 
    "2"]}]}]], "Output",
 CellChangeTimes->{3.7217207673999887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{
         RowBox[{"Expand", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"G", "-", 
             RowBox[{"T", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}], "]"}], ",",
          "k", ",", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "1"}], "]"}]}], "]"}], "*", 
       RowBox[{"k", "^", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "1"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.72171959829712*^9, 3.72171960774866*^9}, 
   3.7217196407265463`*^9, {3.7217196766716022`*^9, 3.7217197361450043`*^9}, {
   3.721719769437908*^9, 3.7217197949113655`*^9}, {3.7217198848545103`*^9, 
   3.721719889642784*^9}, {3.721719934550352*^9, 3.721719939153616*^9}, {
   3.7217205531707354`*^9, 3.721720556502926*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  SuperscriptBox["d", "3"], " ", 
  SuperscriptBox["\[Pi]", "3"]}]], "Output",
 CellChangeTimes->{
  3.7217196411575713`*^9, {3.7217196850140796`*^9, 3.721719736716037*^9}, 
   3.7217198039358816`*^9, 3.7217199428178253`*^9, 3.7217205647073956`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"G", "-", 
            RowBox[{"T", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "^", "2"}], "]"}], ",", 
        "k", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "*", 
      RowBox[{"k", "^", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4"}], "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7217198720507774`*^9, 3.7217198748239365`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["d", "3"], " ", 
     SuperscriptBox["\[Pi]", "3"]}], "8"], ",", "0", ",", 
   FractionBox[
    RowBox[{"35", " ", 
     SuperscriptBox["d", "3"], " ", 
     SuperscriptBox["\[Pi]", "3"]}], "256"]}], "}"}]], "Output",
 CellChangeTimes->{3.721719877377082*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"G", "-", 
        RowBox[{"T", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], ")"}], "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.721602324498*^9, 3.721602365598*^9}, {
  3.7216024028529997`*^9, 3.721602404995*^9}, {3.721602455204*^9, 
  3.7216024737349997`*^9}, {3.721718575633627*^9, 3.7217185776247406`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"175", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}], "32768"]], "Output",
 CellChangeTimes->{{3.7216023444440002`*^9, 3.721602366275*^9}, 
   3.7216024250439997`*^9, 3.721602490039*^9, 3.7217160384025054`*^9, 
   3.7217161969565744`*^9, 3.721718593957675*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"d", ">", "0"}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"G", "-", 
        RowBox[{"T", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], ")"}], "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7217188859473753`*^9, 3.7217188868214254`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3059", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}], "1048576"]], "Output",
 CellChangeTimes->{3.721718897530038*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"G", "-", "T"}], "/.", 
      RowBox[{"d", "\[Rule]", "0.1"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<T0\>\"", ",", "\"\<T1\>\"", ",", "\"\<T2\>\"", ",", "\"\<T3\>\"", 
      ",", "\"\<T4\>\"", ",", "\"\<T5\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.721591250315*^9, 3.721591272101*^9}, {3.721591383284*^9,
    3.721591396076*^9}, {3.721717192975543*^9, 3.7217172571222124`*^9}, 
   3.7217173530366983`*^9, 3.721718992932495*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAA2pNZalqCCEApqa+UbGiYP+VXrhke
HgpAGm2CQaxglj9BiG5tyK0LQDiNm/Hrn5Q/lf64CUNfDUBIXi70kO2SP1sc
w0zc8w5AOeLvBNeCkT8MwCvsIlUQQH875EY6IpA/ZTWi9VksEUCrd2VVg9eN
P3d+eFIg9RFARAmzlTHMiz+F6pPTzs4SQKfQ9PWLyok/TCoPqAyaE0CKHmUR
qxeIP42tNsBMYRRALAwHMo2Shj/KU6P8dDkVQA69TjeQEYU/wM1vjCwDFkBb
EQYLdsmDP7JqgUDM3RZAcDM5LzOEgj8eSz84brQXQFCZnwReYIE/Q/9cg598
GEDTRwD8M2aAP2TWv/K4VRlA++/K1RTZfj8+gYK1YSAaQFssGA2qK30/km/x
uwznGkCGXeWe1qV7P+KApeafvhtAmBcJVnkeej/rZblkwoccQG61XnpQzHg/
8G0SB81hHUANbHywcnh3P65Jy/xmLR5Al880a/NRdj/maDA2A/UeQKghZgPJ
RHU/Gqvak4fNH0CJQ9eo1jR0P4NgcqLNSyBAo/+F+TxIcz/3/BmNS7kgQF7N
euL/WHI/KLuXmcokIUCgRdvMBn5xPzVjxU8RiSFA3E5s78u+cD/AnBUYzPUh
QFquT+YG+W8/KMAVik5bIkDgWCnU4qRuP00F7B3SviJAW2osdwFrbT/w2+TD
ySojQDC9RGi5Kmw/b5yNE4mPI0CB2uFndxFrP8wBJO9KkSNA9JtCKrQMaz8q
Z7rKDJMjQEyPACbyB2s/5DHngZCWI0AnP/bHcf5qP1jHQPCXnSNA0RuBqn/r
aj9C8vPMpqsjQGDoXJDVxWo/FkhahsTHI0A8MKwZZ3tqP3Ot8GGGySNAmnU/
Qsp2aj/QEoc9SMsjQN0xjpcucmo/i92z9MvOI0C1K9TG+mhqPwBzDWPT1SNA
EWBFLaFWaj/qncA/4uMjQHunVMQlMmo/RwNXG6TlI0CXU8aKmy1qP6Ro7fZl
5yNA90rddxIpaj9fMxqu6eojQJPCesQDIGo/1MhzHPHxI0BMnfkc9A1qPzEu
Cviy8yNAV2MaDnMJaj+Ok6DTdPUjQPmQ4yLzBGo/SV7Nivj4I0CudfO19vtp
P6bDY2a6+iNAxLJ8M3r3aT8EKfpBfPwjQEdjM9P+8mk/YY6QHT7+I0CYJrmU
hO5pP77zJvn//yNA38CvdwvqaT+qFZd5
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
xYFZX6geXza9sMDCb/mKQ9FTvvA/90Qq5Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
OixUMak8u7TEhAeq7/IYwEL/A8e8t88=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
EOyN0ExF30Nlk3LzKytUOO7dkyKL/D87SIJb
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
89OfsYSeqIeKRjSm5ubUgO/GCaeuXD30f/08g30=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 10}, {-0.022742266409214236`, 0.02383584649570839}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"T0\"", "\"T1\"", "\"T2\"", "\"T3\"", "\"T4\"", "\"T5\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.721591265591*^9, 3.721591272953*^9}, {3.721591325567*^9,
    3.721591346925*^9}, 3.7215914086289997`*^9, 3.72171603865652*^9, {
   3.7217172339968896`*^9, 3.721717257631241*^9}, 3.7217173536187315`*^9, 
   3.7217189938445473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"fs2", "/", "d"}], "/.", 
    RowBox[{"k", "\[Rule]", "3"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0", ",", "0.000001"}], "}"}]}], "]"}]], "Input",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.721592660474*^9, 3.721592714035*^9}, {3.721592746554*^9,
    3.721592816309*^9}, {3.721592846323*^9, 3.721593014245*^9}, {
   3.721593048398*^9, 3.721593138927*^9}, {3.72159317558*^9, 
   3.721593201811*^9}, {3.721593270474*^9, 3.7215933644849997`*^9}, {
   3.7217171225755167`*^9, 3.7217171677981033`*^9}, 3.7217173326425314`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVzX881HccwPHz84TyncOqrQeae8w69MMakXdWnVSS/Ezp/Fgo+RGXkhCz
K7/msomc8yPnx5lzfeRHGn0+o2xCpSO1MqQlVByLa5ey9sfr8fzzZRoU5R6s
SqPR9nzsf1MPXhc7Ko0cFnum9J8C/0ZtCF08wJhzuPZw598qTUHYzvBcvZih
Ae5obA/7QzROCWdfz2EYwnXjwawipxRstpy5+RyDCRVqEbLF7At4/nVuYjJj
I9xu4cnuSEvw8COX4kQGG/pORpSUbpFij7tiqwSGF1TXT5XF9rbiqq6jPSHz
wXB5+Ly2b3QPXows7SpxOw4LJ1JmKpL6cXY9P3JbZiwMa203bjj9GE/GOd/w
szkD3BPKafOjI3iFzoz2jm+TgZ7t7Vu/7xk2E5RlCYxTIbI2XugTPoZLNY2k
6XIexDRB0KuICaw/fLpfPScNvOZcVmdZv8IvT23ttQvLBGX5n0coy2nckvCu
d0E/G/jqClnxvBwnrW2xtfS5AFPLOJJxl1kso9VwN7XlwOybOY7PjX+wqRaj
TofxM/w2v2jL15/DoihLX/uUXFDW+HcOpMzjoQ7z+83jFyHe3Ktt7oUCG7gL
dy/Y5MPakengF9b/4kRoX1ckugQmUd2yBwVKPBoQsFxdUQDmw5rWemPvcPwz
FNYZUgicoVU2pi7vcbfnaNbje0KoLngdPVD9AX+6kFl31aQYRlhOJHVqEeep
jTuO/1gCSVfsg7mVNJJuwpmIji6FX9eH2u/aqUJETbaCvOWXIY27f5Q9rkIe
JoTTJu9cBg+0tXFJrirR4gyGmpwqg5W0bndkrUY8oip+4FmJgJmR1KQ7okaU
Ck56zqgIJJ9NawvT1ElJoSc/OaMcnJ/yZduYGoQTJdpV7FgBa5gHHbLvapCV
HCt6yWQFePDdxTrhmsT6VnWNU04ltD4P9ZvRoJPgA0kaq5yqYFjvAYRK6OSi
Dj9gYKoKnEZHWHY7tMjQq7fHcYUYBh95/ZU1pUWYE8Xfp7tVQ7n8vJ97xhLS
6bcx4Z2iGooMmbuFq7UJj8ZkCWt/AbmO/znPP7SJI3F7YuxTA7aTRQNlATrE
QPrAUbZMAmcadjm5aeoStsHubNZNCUQ2WPTwxLqEe3FhMPRYLRg5rzSI2bKU
tDjRn8pMpQD5lzoko0uJCsN1zKRHCoWtQiKNX0ZE3rw+Q+4VWNMcOOurp0fW
Ptdu+dwAwZf2Gl3bkB7JspjRLT2C4DSjEbS+oIgb+6tjK8IQvF5/ytXbjCIM
TuDtn44hyMt9fqCcSREB/z6PF4mAvb/zqKM5Rapm6z6EnUDQvEHqH2dJkfbm
GPnGZAT9fQ6SFzYUebv9TV93PoKhhaSumy4UaT1ksYFdgIBF/I5/4kqRsycP
X8ACBOZ2cn3/vRTRFPe71BUhcOBtclXu+/jXaezIEyFwExwqWudDEav7sdcC
ryDYMG5RLAykyMxEreEThCCXma43GUSRBtUxrudVBE/aShJtDlPE/mvvdTsa
EQzD+72yEIo4539TbdGCwJSTcoceThFdFEmvbEVwtrLZzCuCIvc6K4ONMQJ5
oSSuLJIi3kqj1fptCOwbuo0coimygrE3ObMdgWqYIiAjhiKDrPND6rcQtM+O
VD3kUqR0O9mc1IGgNz/tpVksRb47pBAofkcQVzbFijlJkf8AdvxjEw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1.*^-6}, {-0.00006280013893323634, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7215926716140003`*^9, 3.721592714538*^9}, {
   3.721592759618*^9, 3.721592803927*^9}, {3.721592856639*^9, 
   3.721592984775*^9}, 3.721593014862*^9, {3.7215930490889997`*^9, 
   3.721593139297*^9}, {3.721593176374*^9, 3.7215932022530003`*^9}, {
   3.721593271153*^9, 3.7215933648710003`*^9}, 3.721716037203437*^9, 
   3.7217171691331797`*^9, 3.721717335450692*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"G", "-", 
       RowBox[{"T", "[", 
        RowBox[{"[", "6", "]"}], "]"}]}], ")"}], "/", "d"}], "/.", 
    RowBox[{"k", "\[Rule]", "5"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0", ",", "0.000001"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7217213771008615`*^9, 3.7217214867291317`*^9}, {
  3.7217215300006065`*^9, 3.721721545052468*^9}, {3.7217216130023546`*^9, 
  3.721721621343831*^9}, {3.721721684067419*^9, 3.721721719714458*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
UmAo7ltirSTEvwAUh/+b
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1.*^-6}, {-3.141601626343076*^-7, 5.655950123132811*^-9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.72172138214715*^9, 3.721721487466174*^9}, {
  3.7217215306896467`*^9, 3.7217215454684916`*^9}, {3.72172161363039*^9, 
  3.7217216217578554`*^9}, {3.7217216885226736`*^9, 3.7217217200394764`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", ">=", "0"}], "}"}], ",", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"G", "-", 
      RowBox[{"T", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7215922851540003`*^9, 3.72159242759*^9}, {
  3.721592467384*^9, 3.72159250508*^9}, {3.721592567323*^9, 
  3.721592574867*^9}, {3.721593434983*^9, 3.721593437705*^9}, {
  3.721593532315*^9, 3.721593545109*^9}, {3.7215935963450003`*^9, 
  3.721593711917*^9}, {3.7215937652530003`*^9, 3.721593765604*^9}, {
  3.7216011166949997`*^9, 3.7216011302460003`*^9}, {3.721721132760886*^9, 
  3.721721162342578*^9}, {3.721721220665914*^9, 3.72172125312477*^9}, {
  3.7217212852956104`*^9, 3.7217212856016283`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Pi]", " ", 
      SuperscriptBox["d", "2"]}], "6"]}], "-", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["\[Pi]", "3"]}], ")"}], " ", 
    SuperscriptBox["d", "4"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "d", "]"}], "6"],
    SeriesData[$CellContext`d, 0, {}, 2, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`d, 0, {
   Rational[-1, 6] Pi, 0, Rational[-1, 4] $CellContext`k^2 Pi^3}, 2, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.721592371696*^9, 3.721592428016*^9}, 
   3.721592506049*^9, {3.721592548007*^9, 3.721592575316*^9}, 
   3.721593445604*^9, {3.721593533559*^9, 3.721593546023*^9}, {
   3.721593649441*^9, 3.721593712696*^9}, 3.721593766519*^9, {
   3.721601117703*^9, 3.721601130891*^9}, 3.7217160374274497`*^9, {
   3.7217211353720355`*^9, 3.721721162869608*^9}, {3.7217212215989676`*^9, 
   3.7217212537178044`*^9}, 3.721721286113657*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "r"}], " ", "-", " ", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"r", "^", "2"}], "+", 
         RowBox[{"a", "^", "2"}]}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "/", "2"}], ")"}], "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"r", "^", "6"}], "+", 
         RowBox[{"a", "^", "2"}]}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"r", ">", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.721596926592*^9, 3.721596973867*^9}, {3.721597036113*^9,
   3.721597071391*^9}, {3.721597305521*^9, 3.7215973252530003`*^9}, {
  3.7215973560150003`*^9, 3.7215973626730003`*^9}, {3.721597428802*^9, 
  3.721597449203*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["r", "4"]}]}], ")"}], " ", 
     SuperscriptBox["a", "4"]}], 
    RowBox[{"8", " ", 
     SuperscriptBox["r", "9"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "a", "]"}], "6"],
    SeriesData[$CellContext`a, 0, {}, 4, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`a, 0, {
   Rational[1, 8] $CellContext`r^(-9) (2 - 3 $CellContext`r^4)}, 4, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7215969456099997`*^9, 3.721596974197*^9}, {
   3.721597038229*^9, 3.7215970716949997`*^9}, 3.721597325851*^9, {
   3.7215974354040003`*^9, 3.721597450045*^9}, 3.7217160374494505`*^9}]
}, Open  ]]
},
WindowSize->{1920, 998},
WindowMargins->{{-4, Automatic}, {Automatic, -4}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 752, 19, 31, "Input"],
Cell[1335, 43, 340, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1712, 56, 791, 22, 31, "Input"],
Cell[2506, 80, 627, 12, 30, "Message"],
Cell[3136, 94, 741, 18, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3914, 117, 632, 14, 31, "Input"],
Cell[4549, 133, 47022, 783, 244, "Output"]
}, Open  ]],
Cell[51586, 919, 920, 19, 31, "Input"],
Cell[CellGroupData[{
Cell[52531, 942, 95, 1, 31, "Input"],
Cell[52629, 945, 277, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52943, 957, 986, 27, 31, "Input"],
Cell[53932, 986, 387, 8, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54356, 999, 677, 17, 31, "Input"],
Cell[55036, 1018, 746, 19, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55819, 1042, 790, 19, 31, "Input"],
Cell[56612, 1063, 462, 11, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57111, 1079, 1290, 26, 31, "Input"],
Cell[58404, 1107, 492, 10, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58933, 1122, 421, 8, 31, "Input"],
Cell[59357, 1132, 440, 9, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59834, 1146, 671, 14, 31, "Input"],
Cell[60508, 1162, 1029, 26, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61574, 1193, 1115, 29, 31, "Input"],
Cell[62692, 1224, 878, 21, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63607, 1250, 413, 8, 31, "Input"],
Cell[64023, 1260, 416, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64476, 1272, 495, 10, 31, "Input"],
Cell[64974, 1284, 477, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65488, 1297, 734, 16, 31, "Input"],
Cell[66225, 1315, 320, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66582, 1326, 874, 22, 31, "Input"],
Cell[67459, 1350, 221, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67717, 1359, 275, 6, 31, "Input"],
Cell[67995, 1367, 307, 7, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68339, 1379, 1106, 23, 31, "Input"],
Cell[69448, 1404, 2410, 75, 62, "Output"]
}, Open  ]],
Cell[71873, 1482, 827, 24, 31, "Input"],
Cell[CellGroupData[{
Cell[72725, 1510, 162, 3, 31, "Input"],
Cell[72890, 1515, 344, 10, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73271, 1530, 714, 20, 31, "Input"],
Cell[73988, 1552, 32184, 541, 224, "Output"]
}, Open  ]],
Cell[106187, 2096, 534, 16, 31, "Input"],
Cell[106724, 2114, 479, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[107228, 2132, 119, 3, 31, "Input"],
Cell[107350, 2137, 258, 7, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107645, 2149, 148, 3, 31, "Input"],
Cell[107796, 2154, 325, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108158, 2166, 222, 4, 31, "Input"],
Cell[108383, 2172, 591, 15, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109011, 2192, 145, 3, 31, "Input"],
Cell[109159, 2197, 635, 18, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109831, 2220, 140, 3, 31, "Input"],
Cell[109974, 2225, 856, 24, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110867, 2254, 140, 3, 31, "Input"],
Cell[111010, 2259, 916, 26, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111963, 2290, 299, 8, 39, "Input"],
Cell[112265, 2300, 3251, 91, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115553, 2396, 290, 5, 31, "Input"],
Cell[115846, 2403, 4969, 134, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120852, 2542, 967, 22, 31, "Input"],
Cell[121822, 2566, 57132, 1069, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178991, 3640, 698, 17, 31, "Input"],
Cell[179692, 3659, 18381, 353, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198110, 4017, 486, 15, 39, "Input"],
Cell[198599, 4034, 179, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198815, 4044, 189, 6, 31, "Input"],
Cell[199007, 4052, 2803, 82, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201847, 4139, 1170, 31, 31, "Input"],
Cell[203020, 4172, 323, 8, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203380, 4185, 795, 24, 31, "Input"],
Cell[204178, 4211, 358, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204573, 4227, 592, 16, 31, "Input"],
Cell[205168, 4245, 327, 7, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205532, 4257, 458, 14, 31, "Input"],
Cell[205993, 4273, 186, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206216, 4283, 695, 17, 31, "Input"],
Cell[206914, 4302, 59577, 1090, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266528, 5397, 613, 13, 41, "Input"],
Cell[267144, 5412, 3013, 60, 203, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270194, 5477, 560, 14, 31, "Input"],
Cell[270757, 5493, 3314, 65, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274108, 5563, 867, 19, 31, "Input"],
Cell[274978, 5584, 1099, 28, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276114, 5617, 942, 26, 31, "Input"],
Cell[277059, 5645, 792, 22, 52, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
